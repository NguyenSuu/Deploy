{"version":3,"sources":["src/app/modules/products/dialog/dialog.component.html","src/app/modules/products/products.component.html","src/app/modules/products/dialog/dialog.component.scss","src/app/modules/products/dialog/dialog.component.ts","src/app/modules/products/products.component.scss","src/app/modules/products/products.component.ts","src/app/modules/products/products.module.ts","src/app/modules/products/services/product.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<form class=\\\"example-form\\\" [formGroup]=\\\"form\\\">\\r\\n    <h1 mat-dialog-title>Sản phẩm</h1>\\r\\n    <div mat-dialog-content>\\r\\n        <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n            <div fxFlex=\\\"10\\\" fxFlex.xs=\\\"10\\\"></div>\\r\\n            <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Tên ngành</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"fieldSelectedId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <mat-option *ngFor=\\\"let f of productSv.fields$ | async\\\" [value]=\\\"f.id\\\">\\r\\n                            {{f.name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"10\\\" fxFlex.xs=\\\"10\\\"></div>\\r\\n            <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Tên dòng sản phẩm</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"plId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <mat-option *ngFor=\\\"let pL of nganhHienThi$ | async\\\" [value]=\\\"pL.id\\\">\\r\\n                            {{pL.name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div mat-dialog-content>\\r\\n        <div [formGroup]=\\\"form\\\">\\r\\n            <div formArrayName=\\\"products\\\" *ngFor=\\\"let control of productsControl.controls; index as i\\\">\\r\\n                <form class=\\\"example-form\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n                        <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Tên sản phẩm</mat-label>\\r\\n                                <input matInput formControlName=\\\"name\\\" placeholder=\\\"Coffee\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                        <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Mã sản phẩm</mat-label>\\r\\n                                <input matInput formControlName=\\\"code\\\" placeholder=\\\"02\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                        <div fxFlex=\\\"20\\\" fxFlex.xs=\\\"20\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Đơn vị tính</mat-label>\\r\\n                                <mat-select formControlName=\\\"u_id\\\">\\r\\n                                    <mat-option *ngFor=\\\"let u of productSv.units$ | async\\\" [value]=\\\"u.id\\\">\\r\\n                                        {{u.name}}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button (click)=\\\"addMore()\\\">Thêm nhiều</button>\\r\\n    <div mat-dialog-actions>\\r\\n        <button mat-button (click)=\\\"onNoClick()\\\">Hủy</button>\\r\\n        <button mat-button (click)=\\\"submit()\\\">Xác nhận</button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <button id=\\\"addNew\\\" mat-raised-button (click)=\\\"openDialog()\\\">Thêm mới</button>\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-primary\\\">\\r\\n                <h4 class=\\\"card-title\\\">Sản phẩm</h4>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <table mat-table [dataSource]=\\\"product\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                    <!-- Position Column -->\\r\\n                    <ng-container matColumnDef=\\\"position\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as i\\\"> {{i + 1}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Code Column -->\\r\\n                    <ng-container matColumnDef=\\\"code\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Mã sản phẩm </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element;index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index==editIndex;else editInput\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"currentProduct.code\\\" />\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element.code}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Name Column -->\\r\\n                    <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Tên sản phẩm </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"currentProduct.name\\\" />\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element.name}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"units_id\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Đơn vị tính </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <mat-form-field>\\r\\n                                    <mat-select [(ngModel)]=\\\"element.u_id\\\">\\r\\n                                        <mat-option *ngFor=\\\"let u of productService.units$ | async\\\" [value]=\\\"u.id\\\">\\r\\n                                            {{ u.name}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element?.units?.name}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"product_line_id\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Mã dòng sản phẩm </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <mat-form-field>\\r\\n                                    <mat-select [(ngModel)]=\\\"element.pL_id\\\">\\r\\n                                        <mat-option *ngFor=\\\"let pL of productService.productLine$ | async\\\"\\r\\n                                            [value]=\\\"pL.id\\\">\\r\\n                                            {{pL.name}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element?.productLine?.name}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"delete\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Thao tác </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else acceptButton\\\">\\r\\n                                <button mat-raised-button (click)=\\\"updateProduct()\\\">Xác nhận</button>\\r\\n                                <button mat-raised-button (click)=\\\"cancelEdit()\\\">Hủy</button>\\r\\n                            </ng-container>\\r\\n                            <ng-template #acceptButton>\\r\\n                                <ng-container *ngIf=\\\"editIndex == null\\\">\\r\\n                                    <button mat-raised-button (click)=\\\"toggleEdit(index, element)\\\">Sửa</button>\\r\\n                                    <button mat-raised-button (click)=\\\"deleteProduct(element.id)\\\">Xóa</button>\\r\\n                                </ng-container>\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBZG1pbi9zcmMvYXBwL21vZHVsZXMvcHJvZHVjdHMvZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ProductService } from '../services/product.service';\r\nimport { Products } from '../../../models/product';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  form: FormGroup;\r\n  plId: any = null;\r\n  fieldSelectedId = null;\r\n  constructor(public dialogRef: MatDialogRef<DialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Products,\r\n    private productSv: ProductService, private formBuilder: FormBuilder\r\n  ) { }\r\n  onNoClick(): void {\r\n    this.dialogRef.close({\r\n\r\n    });\r\n  }\r\n\r\n  get nganhHienThi$() {\r\n    return this.productSv.productLine$.pipe(\r\n      map(listNganh => {\r\n        return listNganh.filter(e => e.f_id == this.fieldSelectedId)\r\n      })\r\n    )\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      products: this.formBuilder.array([])\r\n    })\r\n    this.addMore();\r\n  }\r\n  get productsControl() {\r\n    return this.form.controls.products as FormArray;\r\n  }\r\n  addMore() {\r\n    this.productsControl.push(this.formBuilder.group({\r\n      name: [''],\r\n      code: ['', Validators.required],\r\n      u_id: [''],\r\n      pL_id: [''],\r\n    }))\r\n  }\r\n\r\n  submit() {\r\n    const { products } = this.form.value;\r\n\r\n    const newProducts = products.map(\r\n      e => {\r\n        return {\r\n          ...e,\r\n          pL_id: this.plId\r\n        }\r\n      }\r\n    )\r\n    this.productSv.add(newProducts);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"table {\\n  width: 100%;\\n}\\n\\n#addNew {\\n  width: 300px;\\n  height: 50px;\\n  margin: 5px;\\n  background-color: #2020cf;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkbWluL3NyYy9hcHAvbW9kdWxlcy9wcm9kdWN0cy9DOlxcVXNlcnNcXEtJTkdcXERlc2t0b3BcXEVjb25vbWljLVN0YXRpc3RpY1xcZS1zdGF0aXN0aWNzXFxVSVxccHJvamVjdHMvQWRtaW5cXHNyY1xcYXBwXFxtb2R1bGVzXFxwcm9kdWN0c1xccHJvZHVjdHMuY29tcG9uZW50LnNjc3MiLCJBZG1pbi9zcmMvYXBwL21vZHVsZXMvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FDQ0o7O0FEQ0E7RUFDSSxZQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7QUNFSiIsImZpbGUiOiJBZG1pbi9zcmMvYXBwL21vZHVsZXMvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbiNhZGROZXd7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBtYXJnaW46NXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMyLCAzMiwgMjA3KTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufSIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNhZGROZXcge1xuICB3aWR0aDogMzAwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgbWFyZ2luOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMDIwY2Y7XG4gIGNvbG9yOiB3aGl0ZTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from './services/product.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Products } from '../../models/product';\r\nimport { MatDialog } from '@angular/material';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { ConfirmDialogService } from '../../@lib/services/confirm-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  displayedColumns: string[] = ['position', 'code', 'name','units_id','product_line_id', 'delete'];\r\n  product:Products[]=null;\r\n  editIndex=null;\r\n  currentProduct:Products=null;\r\n  oldProduct:Products=null;\r\n  constructor(public productService:ProductService,public dialog:MatDialog, private confirmDialog: ConfirmDialogService) { }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      data: { product: this.product }\r\n    });\r\n  }\r\n  cancelEdit(){\r\n    this.currentProduct.code=this.oldProduct.code;\r\n    this.currentProduct.name=this.oldProduct.name;\r\n    this.currentProduct.pL_id=this.oldProduct.pL_id;\r\n    this.currentProduct.u_id=this.oldProduct.u_id;\r\n    this.editIndex=this.currentProduct=null;\r\n  }\r\n  updateProduct(){\r\n    this.productService.update(this.currentProduct).subscribe(\r\n      _=>this.currentProduct=this.editIndex=null\r\n    );\r\n  }\r\n  async deleteProduct(id:number){\r\n    this.confirmDialog.show('Bạn chắc chắn muốn xóa?').then(res => {\r\n      if (res) {\r\n        this.productService.delete(id);\r\n      }\r\n    });    \r\n  }\r\n  toggleEdit(index:number,product:Products){\r\n    this.editIndex=index;\r\n    this.currentProduct=product;\r\n    this.oldProduct={...product};\r\n  }\r\n  ngOnInit() {  \r\n    this.productService.product$.subscribe(l=>this.product=l)\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductsComponent } from './products.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatSelectModule, MatInputModule, MatTableModule, MatFormFieldModule, MatTabsModule, MatDialogModule, MatButtonModule } from '@angular/material';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ProductService } from './services/product.service';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { LibModule } from '../../@lib/lib.module';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductsComponent,\r\n    children: []\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [ProductsComponent, DialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES),\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    LibModule\r\n  ],\r\n  providers:[ProductService],\r\n  entryComponents:[DialogComponent]\r\n\r\n})\r\nexport class ProductsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, forkJoin } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Products } from '../../../models/product';\r\nimport { Fields } from '../../../models/field';\r\nimport { tap, retry, map } from 'rxjs/operators';\r\nimport { Units } from '../../../models/units';\r\nimport { ProductLine } from '../../../models/product-line';\r\n\r\n\r\nconst DOMAIN = \"\"\r\n@Injectable()\r\nexport class ProductService {\r\n  productsSubject = new BehaviorSubject<Products[]>([]);\r\n  unitsSubject = new BehaviorSubject<Units[]>([]);\r\n  productLinesSubject = new BehaviorSubject<ProductLine[]>([]);\r\n  fieldsSubject = new BehaviorSubject<Fields[]>([]);\r\n  constructor(private httpCilent: HttpClient) {\r\n    this.getList();\r\n  }\r\n  get product$() {\r\n    return this.productsSubject.asObservable();\r\n  }\r\n  get productLine$() {\r\n    return this.productLinesSubject.asObservable();\r\n  }\r\n  get units$() {\r\n    return this.unitsSubject.asObservable();\r\n  }\r\n  get fields$() {\r\n    return this.fieldsSubject.asObservable();\r\n  }\r\n  getList() {\r\n    const http = this.httpCilent;\r\n    const requests = [\r\n      http.get(\"products\"),\r\n      http.get(\"units\"),\r\n      http.get(\"product-line\"),\r\n      http.get(\"fields\")\r\n    ]\r\n\r\n    forkJoin(requests.map(rq => rq.pipe(retry(3)))).subscribe(\r\n      (res: any) => {\r\n        const products: Products[] = res[0];\r\n        const productLine: Units[] = res[1];\r\n        const units: ProductLine[] = res[2];\r\n        const fields: Fields[] = res[3];\r\n        this.productsSubject.next(products)\r\n        this.productLinesSubject.next(units)\r\n        this.unitsSubject.next(productLine)\r\n        this.fieldsSubject.next(fields)\r\n      }\r\n    )\r\n  }\r\n  add(products: Products[]) {\r\n    this.httpCilent.post(\"products\", products).subscribe(\r\n      (res: any) => {\r\n        console.log('them moi thanh cong')\r\n        res.map(\r\n          e => {\r\n            const newList = [e, ...this.productsSubject.value]\r\n            this.productsSubject.next(newList)\r\n          })\r\n      }\r\n    )\r\n  }\r\n  update(product: Products) {\r\n    return this.httpCilent.patch(\"products\", product).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.productsSubject;\r\n\r\n          const index = value.findIndex(e => e.id == product.id);\r\n\r\n          const newList:any = [...value];\r\n\r\n          newList[index] = product;\r\n\r\n          const pL = this.productLinesSubject.value.find(e => e.id == product.pL_id);\r\n          \r\n          product.productLine = pL;\r\n\r\n          this.productsSubject.next(newList);\r\n        }\r\n      )\r\n    )\r\n  }\r\n  delete(id: number) {\r\n\r\n    this.httpCilent.delete(\"products/\" + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.productsSubject;\r\n        const newList = value.filter(e => e.id != id);\r\n        this.productsSubject.next(newList);\r\n      }\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"modules-products-products-module-es5.js"}