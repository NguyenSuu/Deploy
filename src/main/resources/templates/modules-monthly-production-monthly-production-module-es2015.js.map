{"version":3,"sources":["./src/app/modules/monthly-production/dialog-mp/dialog-mp.component.html","./src/app/modules/monthly-production/monthly-production.component.html","./src/app/modules/monthly-production/dialog-mp/dialog-mp.component.scss","./src/app/modules/monthly-production/dialog-mp/dialog-mp.component.ts","./src/app/modules/monthly-production/monthly-production.component.scss","./src/app/modules/monthly-production/monthly-production.component.ts","./src/app/modules/monthly-production/monthly-production.module.ts","./src/app/modules/monthly-production/services/monthly-production.service.ts"],"names":[],"mappings":"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","file":"modules-monthly-production-monthly-production-module-es2015.js","sourcesContent":["export default \"<form class=\\\"example-form\\\">\\r\\n    <h1 mat-dialog-title>Số liệu sản xuất theo tháng</h1>\\r\\n    <div mat-dialog-content>\\r\\n        <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n           \\r\\n            <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Năm</mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"year\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"10\\\" fxFlex.xs=\\\"10\\\"></div>\\r\\n            <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Tháng</mat-label>\\r\\n                    <mat-select  [(ngModel)]=\\\"month_value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <mat-option *ngFor=\\\"let m of month\\\" [value]=\\\"m\\\">\\r\\n                            {{m}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div mat-dialog-content>\\r\\n        <div [formGroup]=\\\"form\\\">\\r\\n            <div formArrayName=\\\"mProduction\\\" *ngFor=\\\"let control of mProductionControl.controls;index as i\\\">\\r\\n                <form class=\\\"example-form\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n                        <div fxFlex=\\\"50\\\" fxFlex.xs=\\\"50\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-label> Tên sản phẩm</mat-label>\\r\\n                                <mat-select formControlName=\\\"p_id\\\">\\r\\n                                    <mat-option *ngFor=\\\"let p of mPSV.products$ | async\\\" [value]=\\\"p.id\\\">\\r\\n                                        {{p.name}}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"50\\\" fxFlex.xs=\\\"50\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Số liệu</mat-label>\\r\\n                                <input matInput formControlName=\\\"data\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button (click)=\\\"addMore()\\\">Thêm nhiều</button>\\r\\n    <div mat-dialog-actions>\\r\\n        <button mat-button (click)=\\\"onNoClick()\\\">Hủy</button>\\r\\n        <button mat-button (click)=\\\"submit()\\\">Thêm</button>\\r\\n    </div>\\r\\n</form>\"","export default \"        <button id=\\\"addNew\\\" mat-raised-button (click)=\\\"openDialog()\\\">Thêm mới</button>\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-primary\\\">\\r\\n                <h4 class=\\\"card-title\\\">Số liệu sản xuất theo tháng</h4>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <table mat-table [dataSource]=\\\"monthlyProduction\\\" class=\\\"mat-elevation-z8\\\" matSort>\\r\\n                    <!-- Position Column -->\\r\\n                    <ng-container matColumnDef=\\\"position\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as i\\\"> {{i + 1}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Code Column -->\\r\\n                    <ng-container matColumnDef=\\\"month\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Tháng </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element;index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index==editIndex;else editInput\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"currentMonthlyProduction.month\\\" />\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element.month}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"years\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>Năm </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"currentMonthlyProduction.year\\\" />\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element.year}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"product_id\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Tên sản phẩm</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <mat-form-field>\\r\\n                                    <mat-select [(ngModel)]=\\\"element.p_id\\\">\\r\\n                                        <mat-option *ngFor=\\\"let p of mPSV.products$ | async\\\" [value]=\\\"p.id\\\">\\r\\n                                            {{p.name}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element?.products?.name}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"productLine_id\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Tên loại sản phẩm</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <mat-form-field>\\r\\n                                    <mat-select [(ngModel)]=\\\"element.pL_id\\\">\\r\\n                                        <mat-option *ngFor=\\\"let pL of mPSV.productLine$ | async\\\" [value]=\\\"pL.id\\\">\\r\\n                                            {{ pL.name}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element?.products?.productLine?.name}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"data\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Số liệu </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"currentMonthlyProduction.data\\\" />\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element.data}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"delete\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Thao tác </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else acceptButton\\\">\\r\\n                                <button mat-raised-button (click)=\\\"updateData()\\\">Xác nhận</button>\\r\\n                                <button mat-raised-button (click)=\\\"cancelEdit()\\\">Hủy</button>\\r\\n                            </ng-container>\\r\\n                            <ng-template #acceptButton>\\r\\n                                <ng-container *ngIf=\\\"editIndex == null\\\">\\r\\n                                    <button mat-raised-button (click)=\\\"toggleEdit(index, element)\\\">Sửa</button>\\r\\n                                    <button mat-raised-button (click)=\\\"deleteData(element.id)\\\">Xóa</button>\\r\\n                                </ng-container>\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBZG1pbi9zcmMvYXBwL21vZHVsZXMvbW9udGhseS1wcm9kdWN0aW9uL2RpYWxvZy1tcC9kaWFsb2ctbXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { MonthlyProduction } from '../../../models/monthly-production';\r\nimport { MonthlyProductionService } from '../services/monthly-production.service';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-dialog-mp',\r\n  templateUrl: './dialog-mp.component.html',\r\n  styleUrls: ['./dialog-mp.component.scss']\r\n})\r\nexport class DialogMPComponent implements OnInit {\r\n  form: FormGroup\r\n  constructor(public dialogRef: MatDialogRef<DialogMPComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MonthlyProduction,\r\n    public mPSV: MonthlyProductionService, private formBuilder: FormBuilder\r\n  ) { }\r\n  month:any=[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"];\r\n  year:any=null;\r\n  month_value:any=null;\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      mProduction:this.formBuilder.array([])\r\n    })\r\n    this.addMore();\r\n    // this.mPSV.monthlyProductionsSubject.subscribe(\r\n    //   (res: any) => {\r\n    //     const {productCode, typeDataCode} = res[0]\r\n    //     this.form.patchValue({\r\n    //       productCode,\r\n    //       typeDataCode\r\n    //     })\r\n    //   }\r\n    // )\r\n  }\r\n  get mProductionControl(){\r\n    return this.form.controls.mProduction as FormArray;\r\n  }\r\n  addMore(){\r\n    this.mProductionControl.push(this.formBuilder.group({\r\n      month: [''],\r\n      year: [''],\r\n      data: [''],\r\n      p_id:[''],\r\n\r\n    }))\r\n  }\r\n  onNoClick() {\r\n    this.dialogRef.close();\r\n  }\r\n  submit() {\r\n    const {mProduction} = this.form.value;\r\n    const newMProduction=mProduction.map(\r\n      e =>{\r\n        return{\r\n          ...e,\r\n          month:this.month_value,\r\n          year:this.year\r\n        }\r\n      \r\n    })\r\n    this.mPSV.add(newMProduction);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \":host {\\n  padding: 1rem;\\n  display: block;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n#addNew {\\n  width: 300px;\\n  height: 50px;\\n  margin: 5px;\\n  background-color: #2020cf;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkbWluL3NyYy9hcHAvbW9kdWxlcy9tb250aGx5LXByb2R1Y3Rpb24vQzpcXFVzZXJzXFxLSU5HXFxEZXNrdG9wXFxFY29ub21pYy1TdGF0aXN0aWNcXGUtc3RhdGlzdGljc1xcVUlcXHByb2plY3RzL0FkbWluXFxzcmNcXGFwcFxcbW9kdWxlc1xcbW9udGhseS1wcm9kdWN0aW9uXFxtb250aGx5LXByb2R1Y3Rpb24uY29tcG9uZW50LnNjc3MiLCJBZG1pbi9zcmMvYXBwL21vZHVsZXMvbW9udGhseS1wcm9kdWN0aW9uL21vbnRobHktcHJvZHVjdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxXQUFBO0FDQ0o7O0FEQ0E7RUFDSSxZQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7QUNFSiIsImZpbGUiOiJBZG1pbi9zcmMvYXBwL21vZHVsZXMvbW9udGhseS1wcm9kdWN0aW9uL21vbnRobHktcHJvZHVjdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxudGFibGV7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4jYWRkTmV3e1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgbWFyZ2luOjVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigzMiwgMzIsIDIwNyk7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn0iLCI6aG9zdCB7XG4gIHBhZGRpbmc6IDFyZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jYWRkTmV3IHtcbiAgd2lkdGg6IDMwMHB4O1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbjogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMGNmO1xuICBjb2xvcjogd2hpdGU7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MonthlyProduction } from '../../models/monthly-production';\r\nimport { MatDialog } from '@angular/material';\r\nimport { DialogMPComponent } from './dialog-mp/dialog-mp.component';\r\nimport { MonthlyProductionService } from './services/monthly-production.service';\r\nimport { ConfirmDialogService } from '../../@lib/services/confirm-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-monthly-production',\r\n  templateUrl: './monthly-production.component.html',\r\n  styleUrls: ['./monthly-production.component.scss']\r\n})\r\n\r\nexport class MonthlyProductionComponent implements OnInit {\r\n  displayedColumns: string[] = [\"position\", \"month\", \"years\", \"product_id\", \"productLine_id\", \"data\", \"delete\"]\r\n  monthlyProduction: MonthlyProduction[] = null;\r\n  currentMonthlyProduction: MonthlyProduction = null;\r\n  oldMonthlyProduction: MonthlyProduction = null;\r\n  editIndex = null;\r\n  constructor(private dialog: MatDialog, public mPSV: MonthlyProductionService, private confirmDialog: ConfirmDialogService) { }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogMPComponent, {\r\n      data: { monthlyProduction: this.monthlyProduction }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mPSV.monthlyProduction$.subscribe(l => this.monthlyProduction = l)\r\n  }\r\n  toggleEdit(index: number, monthlyProduction: MonthlyProduction) {\r\n    this.currentMonthlyProduction = monthlyProduction;\r\n    this.editIndex = index;\r\n    this.oldMonthlyProduction = { ...monthlyProduction };\r\n  }\r\n  cancelEdit() {\r\n    this.currentMonthlyProduction.month = this.oldMonthlyProduction.month;\r\n    this.currentMonthlyProduction.year = this.oldMonthlyProduction.year;\r\n    // this.currentMonthlyProduction.productCode = this.oldMonthlyProduction.productCode;\r\n    // this.currentMonthlyProduction.typeDataCode = this.oldMonthlyProduction.typeDataCode;\r\n    this.editIndex = this.currentMonthlyProduction = null;\r\n  }\r\n  updateData() {\r\n    this.mPSV.update(this.currentMonthlyProduction).subscribe(\r\n      _ => this.currentMonthlyProduction = this.editIndex = null\r\n    )\r\n  }\r\n  deleteData(id: number) {\r\n    this.confirmDialog.show().then(\r\n      res => {\r\n        if (res) {\r\n          this.mPSV.delete(id);\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MonthlyProductionComponent } from './monthly-production.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatTableModule, MatTabsModule, MatInputModule, MatFormFieldModule, MatDialogModule, MatButtonModule, MatSelectModule, MatSortModule } from '@angular/material';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { LibModule } from '../../@lib/lib.module';\r\nimport { MonthlyProductionService } from './services/monthly-production.service';\r\nimport { DialogMPComponent } from './dialog-mp/dialog-mp.component';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: MonthlyProductionComponent,\r\n    children: []\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [MonthlyProductionComponent, DialogMPComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES),\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatSortModule,\r\n    LibModule\r\n  ],\r\n  providers:[MonthlyProductionService],\r\n  entryComponents:[DialogMPComponent]\r\n})\r\nexport class MonthlyProductionModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MonthlyProduction } from '../../../models/monthly-production';\r\nimport { BehaviorSubject, forkJoin } from 'rxjs';\r\nimport { Products } from '../../../models/product';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { ProductLine } from '../../../models/product-line';\r\nconst DOMAIN = \"\"\r\n@Injectable()\r\nexport class MonthlyProductionService {\r\n  monthlyProductionsSubject = new BehaviorSubject<MonthlyProduction[]>([])\r\n  productsSubject = new BehaviorSubject<Products[]>([])\r\n  productLineSubject = new BehaviorSubject<ProductLine[]>([])\r\n  get monthlyProduction$() {\r\n    return this.monthlyProductionsSubject.asObservable()\r\n  }\r\n  get products$() {\r\n    return this.productsSubject.asObservable()\r\n  }\r\n  get productLine$() {\r\n    return this.productLineSubject.asObservable()\r\n  }\r\n  constructor(private http: HttpClient) {\r\n    this.getList()\r\n  }\r\n\r\n  getList() {\r\n    const request = [\r\n      this.http.get(\"monthly-production\"),\r\n      this.http.get(\"products\"),\r\n      this.http.get(\"product-line\")\r\n    ]\r\n    forkJoin(request).subscribe(\r\n      (res: any) => {\r\n        const monthlyProduction: MonthlyProduction[] = res[0];\r\n        const products: Products[] = res[1];\r\n        const productLine: ProductLine[] = res[2];\r\n        this.monthlyProductionsSubject.next(monthlyProduction);\r\n        this.productsSubject.next(products);\r\n        this.productLineSubject.next(productLine)\r\n      }\r\n    )\r\n  }\r\n  add(mProduction: MonthlyProduction[]){\r\n    console.log(mProduction);\r\n  this.http.post(\"monthly-production\", mProduction).subscribe(\r\n    (res: any) => {\r\n      res.map(\r\n        e => {\r\n          const newList = [e, ...this.monthlyProductionsSubject.value]\r\n          this.monthlyProductionsSubject.next(newList)\r\n\r\n        }\r\n      )\r\n    }\r\n  )\r\n}\r\nupdate(monthlyProduction: MonthlyProduction){\r\n  return this.http.patch(\"monthly-production\", monthlyProduction).pipe(\r\n    tap(\r\n      res => {\r\n        const { value } = this.monthlyProductionsSubject\r\n        const index = value.findIndex(e => e.id == monthlyProduction.id)\r\n        const newList = { ...value }\r\n        newList[index] = monthlyProduction\r\n        this.monthlyProductionsSubject.next(newList)\r\n      }\r\n    )\r\n  )\r\n}\r\ndelete (id: number) {\r\n  this.http.delete(\"monthly-production/\" + id).subscribe(\r\n    res => {\r\n      const { value } = this.monthlyProductionsSubject\r\n      const newList = value.filter(e => e.id != id)\r\n      this.monthlyProductionsSubject.next(newList)\r\n    }\r\n  )\r\n}\r\n}\r\n"],"sourceRoot":"webpack:///"}