{"version":3,"sources":["./src/app/modules/products/dialog/dialog.component.html","./src/app/modules/products/products.component.html","./src/app/modules/products/dialog/dialog.component.scss","./src/app/modules/products/dialog/dialog.component.ts","./src/app/modules/products/products.component.scss","./src/app/modules/products/products.component.ts","./src/app/modules/products/products.module.ts","./src/app/modules/products/services/product.service.ts"],"names":[],"mappings":"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","file":"modules-products-products-module-es2015.js","sourcesContent":["export default \"<form class=\\\"example-form\\\" [formGroup]=\\\"form\\\">\\r\\n    <h1 mat-dialog-title>Sản phẩm</h1>\\r\\n    <div mat-dialog-content>\\r\\n        <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n            <div fxFlex=\\\"10\\\" fxFlex.xs=\\\"10\\\"></div>\\r\\n            <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Tên ngành</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"fieldSelectedId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <mat-option *ngFor=\\\"let f of productSv.fields$ | async\\\" [value]=\\\"f.id\\\">\\r\\n                            {{f.name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"10\\\" fxFlex.xs=\\\"10\\\"></div>\\r\\n            <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Tên dòng sản phẩm</mat-label>\\r\\n                    <mat-select [(ngModel)]=\\\"plId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <mat-option *ngFor=\\\"let pL of nganhHienThi$ | async\\\" [value]=\\\"pL.id\\\">\\r\\n                            {{pL.name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div mat-dialog-content>\\r\\n        <div [formGroup]=\\\"form\\\">\\r\\n            <div formArrayName=\\\"products\\\" *ngFor=\\\"let control of productsControl.controls; index as i\\\">\\r\\n                <form class=\\\"example-form\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n                        <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Tên sản phẩm</mat-label>\\r\\n                                <input matInput formControlName=\\\"name\\\" placeholder=\\\"Coffee\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                        <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Mã sản phẩm</mat-label>\\r\\n                                <input matInput formControlName=\\\"code\\\" placeholder=\\\"02\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                        <div fxFlex=\\\"20\\\" fxFlex.xs=\\\"20\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-label>Đơn vị tính</mat-label>\\r\\n                                <mat-select formControlName=\\\"u_id\\\">\\r\\n                                    <mat-option *ngFor=\\\"let u of productSv.units$ | async\\\" [value]=\\\"u.id\\\">\\r\\n                                        {{u.name}}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button (click)=\\\"addMore()\\\">Thêm nhiều</button>\\r\\n    <div mat-dialog-actions>\\r\\n        <button mat-button (click)=\\\"onNoClick()\\\">Hủy</button>\\r\\n        <button mat-button (click)=\\\"submit()\\\">Xác nhận</button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <button id=\\\"addNew\\\" mat-raised-button (click)=\\\"openDialog()\\\">Thêm mới</button>\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-primary\\\">\\r\\n                <h4 class=\\\"card-title\\\">Sản phẩm</h4>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <table mat-table [dataSource]=\\\"product\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                    <!-- Position Column -->\\r\\n                    <ng-container matColumnDef=\\\"position\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as i\\\"> {{i + 1}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Code Column -->\\r\\n                    <ng-container matColumnDef=\\\"code\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Mã sản phẩm </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element;index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index==editIndex;else editInput\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"currentProduct.code\\\" />\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element.code}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Name Column -->\\r\\n                    <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Tên sản phẩm </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"currentProduct.name\\\" />\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element.name}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"units_id\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Đơn vị tính </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <mat-form-field>\\r\\n                                    <mat-select [(ngModel)]=\\\"element.u_id\\\">\\r\\n                                        <mat-option *ngFor=\\\"let u of productService.units$ | async\\\" [value]=\\\"u.id\\\">\\r\\n                                            {{ u.name}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element?.units?.name}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"product_line_id\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Mã dòng sản phẩm </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <mat-form-field>\\r\\n                                    <mat-select [(ngModel)]=\\\"element.pL_id\\\">\\r\\n                                        <mat-option *ngFor=\\\"let pL of productService.productLine$ | async\\\"\\r\\n                                            [value]=\\\"pL.id\\\">\\r\\n                                            {{pL.name}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element?.productLine?.name}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"delete\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Thao tác </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else acceptButton\\\">\\r\\n                                <button mat-raised-button (click)=\\\"updateProduct()\\\">Xác nhận</button>\\r\\n                                <button mat-raised-button (click)=\\\"cancelEdit()\\\">Hủy</button>\\r\\n                            </ng-container>\\r\\n                            <ng-template #acceptButton>\\r\\n                                <ng-container *ngIf=\\\"editIndex == null\\\">\\r\\n                                    <button mat-raised-button (click)=\\\"toggleEdit(index, element)\\\">Sửa</button>\\r\\n                                    <button mat-raised-button (click)=\\\"deleteProduct(element.id)\\\">Xóa</button>\\r\\n                                </ng-container>\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBZG1pbi9zcmMvYXBwL21vZHVsZXMvcHJvZHVjdHMvZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ProductService } from '../services/product.service';\r\nimport { Products } from '../../../models/product';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  form: FormGroup;\r\n  plId: any = null;\r\n  fieldSelectedId = null;\r\n  constructor(public dialogRef: MatDialogRef<DialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Products,\r\n    private productSv: ProductService, private formBuilder: FormBuilder\r\n  ) { }\r\n  onNoClick(): void {\r\n    this.dialogRef.close({\r\n\r\n    });\r\n  }\r\n\r\n  get nganhHienThi$() {\r\n    return this.productSv.productLine$.pipe(\r\n      map(listNganh => {\r\n        return listNganh.filter(e => e.f_id == this.fieldSelectedId)\r\n      })\r\n    )\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      products: this.formBuilder.array([])\r\n    })\r\n    this.addMore();\r\n  }\r\n  get productsControl() {\r\n    return this.form.controls.products as FormArray;\r\n  }\r\n  addMore() {\r\n    this.productsControl.push(this.formBuilder.group({\r\n      name: [''],\r\n      code: ['', Validators.required],\r\n      u_id: [''],\r\n      pL_id: [''],\r\n    }))\r\n  }\r\n\r\n  submit() {\r\n    const { products } = this.form.value;\r\n\r\n    const newProducts = products.map(\r\n      e => {\r\n        return {\r\n          ...e,\r\n          pL_id: this.plId\r\n        }\r\n      }\r\n    )\r\n    this.productSv.add(newProducts);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"table {\\n  width: 100%;\\n}\\n\\n#addNew {\\n  width: 300px;\\n  height: 50px;\\n  margin: 5px;\\n  background-color: #2020cf;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkbWluL3NyYy9hcHAvbW9kdWxlcy9wcm9kdWN0cy9DOlxcVXNlcnNcXEtJTkdcXERlc2t0b3BcXEVjb25vbWljLVN0YXRpc3RpY1xcZS1zdGF0aXN0aWNzXFxVSVxccHJvamVjdHMvQWRtaW5cXHNyY1xcYXBwXFxtb2R1bGVzXFxwcm9kdWN0c1xccHJvZHVjdHMuY29tcG9uZW50LnNjc3MiLCJBZG1pbi9zcmMvYXBwL21vZHVsZXMvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FDQ0o7O0FEQ0E7RUFDSSxZQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7QUNFSiIsImZpbGUiOiJBZG1pbi9zcmMvYXBwL21vZHVsZXMvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbiNhZGROZXd7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBtYXJnaW46NXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMyLCAzMiwgMjA3KTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufSIsInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiNhZGROZXcge1xuICB3aWR0aDogMzAwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgbWFyZ2luOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMDIwY2Y7XG4gIGNvbG9yOiB3aGl0ZTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from './services/product.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Products } from '../../models/product';\r\nimport { MatDialog } from '@angular/material';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { ConfirmDialogService } from '../../@lib/services/confirm-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  displayedColumns: string[] = ['position', 'code', 'name','units_id','product_line_id', 'delete'];\r\n  product:Products[]=null;\r\n  editIndex=null;\r\n  currentProduct:Products=null;\r\n  oldProduct:Products=null;\r\n  constructor(public productService:ProductService,public dialog:MatDialog, private confirmDialog: ConfirmDialogService) { }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      data: { product: this.product }\r\n    });\r\n  }\r\n  cancelEdit(){\r\n    this.currentProduct.code=this.oldProduct.code;\r\n    this.currentProduct.name=this.oldProduct.name;\r\n    this.currentProduct.pL_id=this.oldProduct.pL_id;\r\n    this.currentProduct.u_id=this.oldProduct.u_id;\r\n    this.editIndex=this.currentProduct=null;\r\n  }\r\n  updateProduct(){\r\n    this.productService.update(this.currentProduct).subscribe(\r\n      _=>this.currentProduct=this.editIndex=null\r\n    );\r\n  }\r\n  async deleteProduct(id:number){\r\n    this.confirmDialog.show('Bạn chắc chắn muốn xóa?').then(res => {\r\n      if (res) {\r\n        this.productService.delete(id);\r\n      }\r\n    });    \r\n  }\r\n  toggleEdit(index:number,product:Products){\r\n    this.editIndex=index;\r\n    this.currentProduct=product;\r\n    this.oldProduct={...product};\r\n  }\r\n  ngOnInit() {  \r\n    this.productService.product$.subscribe(l=>this.product=l)\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductsComponent } from './products.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatSelectModule, MatInputModule, MatTableModule, MatFormFieldModule, MatTabsModule, MatDialogModule, MatButtonModule } from '@angular/material';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ProductService } from './services/product.service';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { LibModule } from '../../@lib/lib.module';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductsComponent,\r\n    children: []\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [ProductsComponent, DialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES),\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    LibModule\r\n  ],\r\n  providers:[ProductService],\r\n  entryComponents:[DialogComponent]\r\n\r\n})\r\nexport class ProductsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, forkJoin } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Products } from '../../../models/product';\r\nimport { Fields } from '../../../models/field';\r\nimport { tap, retry, map } from 'rxjs/operators';\r\nimport { Units } from '../../../models/units';\r\nimport { ProductLine } from '../../../models/product-line';\r\n\r\n\r\nconst DOMAIN = \"\"\r\n@Injectable()\r\nexport class ProductService {\r\n  productsSubject = new BehaviorSubject<Products[]>([]);\r\n  unitsSubject = new BehaviorSubject<Units[]>([]);\r\n  productLinesSubject = new BehaviorSubject<ProductLine[]>([]);\r\n  fieldsSubject = new BehaviorSubject<Fields[]>([]);\r\n  constructor(private httpCilent: HttpClient) {\r\n    this.getList();\r\n  }\r\n  get product$() {\r\n    return this.productsSubject.asObservable();\r\n  }\r\n  get productLine$() {\r\n    return this.productLinesSubject.asObservable();\r\n  }\r\n  get units$() {\r\n    return this.unitsSubject.asObservable();\r\n  }\r\n  get fields$() {\r\n    return this.fieldsSubject.asObservable();\r\n  }\r\n  getList() {\r\n    const http = this.httpCilent;\r\n    const requests = [\r\n      http.get(\"products\"),\r\n      http.get(\"units\"),\r\n      http.get(\"product-line\"),\r\n      http.get(\"fields\")\r\n    ]\r\n\r\n    forkJoin(requests.map(rq => rq.pipe(retry(3)))).subscribe(\r\n      (res: any) => {\r\n        const products: Products[] = res[0];\r\n        const productLine: Units[] = res[1];\r\n        const units: ProductLine[] = res[2];\r\n        const fields: Fields[] = res[3];\r\n        this.productsSubject.next(products)\r\n        this.productLinesSubject.next(units)\r\n        this.unitsSubject.next(productLine)\r\n        this.fieldsSubject.next(fields)\r\n      }\r\n    )\r\n  }\r\n  add(products: Products[]) {\r\n    this.httpCilent.post(\"products\", products).subscribe(\r\n      (res: any) => {\r\n        console.log('them moi thanh cong')\r\n        res.map(\r\n          e => {\r\n            const newList = [e, ...this.productsSubject.value]\r\n            this.productsSubject.next(newList)\r\n          })\r\n      }\r\n    )\r\n  }\r\n  update(product: Products) {\r\n    return this.httpCilent.patch(\"products\", product).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.productsSubject;\r\n\r\n          const index = value.findIndex(e => e.id == product.id);\r\n\r\n          const newList:any = [...value];\r\n\r\n          newList[index] = product;\r\n\r\n          const pL = this.productLinesSubject.value.find(e => e.id == product.pL_id);\r\n          \r\n          product.productLine = pL;\r\n\r\n          this.productsSubject.next(newList);\r\n        }\r\n      )\r\n    )\r\n  }\r\n  delete(id: number) {\r\n\r\n    this.httpCilent.delete(\"products/\" + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.productsSubject;\r\n        const newList = value.filter(e => e.id != id);\r\n        this.productsSubject.next(newList);\r\n      }\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}