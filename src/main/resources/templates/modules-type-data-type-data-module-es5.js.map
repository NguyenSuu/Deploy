{"version":3,"sources":["src/app/modules/type-data/dialog-type-data/dialog-type-data.component.html","src/app/modules/type-data/type-data.component.html","src/app/modules/type-data/dialog-type-data/dialog-type-data.component.scss","src/app/modules/type-data/dialog-type-data/dialog-type-data.component.ts","src/app/modules/type-data/services/type-data.service.ts","src/app/modules/type-data/type-data.component.scss","src/app/modules/type-data/type-data.component.ts","src/app/modules/type-data/type-data.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<form class=\\\"example-form\\\" [formGroup]=\\\"form\\\">\\r\\n    <h1 mat-dialog-title>Sản phẩm</h1>\\r\\n    <div mat-dialog-content>\\r\\n        <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n            <div fxFlex=\\\"45\\\" fxFlex.xs=\\\"45\\\">\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <mat-label> Mã số liệu</mat-label>\\r\\n                    <input matInput formControlName=\\\"code\\\" placeholder=\\\"DL01\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\" ></div>\\r\\n            <div fxFlex=\\\"50\\\" fxFlex.xs=\\\"50\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label> Tên số liệu</mat-label>\\r\\n                    <input matInput formControlName=\\\"name\\\" placeholder=\\\"Thực tế\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div mat-dialog-actions>\\r\\n        <button mat-button (click)=\\\"onNoClick()\\\">Hủy</button>\\r\\n        <button mat-button (click)=\\\"submit()\\\">Xác nhận</button>\\r\\n    </div>\\r\\n</form>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <button id=\\\"addNew\\\" mat-raised-button (click)=\\\"openDialog()\\\">Thêm mới</button>\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-primary\\\">\\r\\n                <h4 class=\\\"card-title\\\">MÃ LOẠI SỐ LIỆU</h4>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <table mat-table [dataSource]=\\\"typeData\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                    <!-- Position Column -->\\r\\n                    <ng-container matColumnDef=\\\"position\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element;index as i\\\"> {{i+1}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Code Column -->\\r\\n                    <ng-container matColumnDef=\\\"code\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Mã số liệu </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element;index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index==editIndex;else editInput\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"currentTypeData.code\\\" />\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element.code}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Name Column -->\\r\\n                    <ng-container matColumnDef=\\\"name\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Tên số liệu </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"currentTypeData.name\\\" />\\r\\n                            </ng-container>\\r\\n                            <ng-template #editInput>\\r\\n                                {{element.name}}\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"action\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Thao tác </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                            <ng-container *ngIf=\\\"index == editIndex; else acceptButton\\\">\\r\\n                                <button mat-raised-button (click)=\\\"updateTypeData()\\\">Xác nhận</button>\\r\\n                                <button mat-raised-button (click)=\\\"cancelEdit()\\\">Hủy</button>\\r\\n                            </ng-container>\\r\\n                            <ng-template #acceptButton>\\r\\n                                <ng-container *ngIf=\\\"editIndex == null\\\">\\r\\n                                    <button mat-raised-button (click)=\\\"toggleEdit(index, element)\\\">Sửa</button>\\r\\n                                    <button mat-raised-button (click)=\\\"deleteTyteData(element.id)\\\">Xóa</button>\\r\\n                                </ng-container>\\r\\n                            </ng-template>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBZG1pbi9zcmMvYXBwL21vZHVsZXMvdHlwZS1kYXRhL2RpYWxvZy10eXBlLWRhdGEvZGlhbG9nLXR5cGUtZGF0YS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { TypeData } from '../../../models/type-data';\r\nimport { TypeDataService } from '../services/type-data.service';\r\n\r\n@Component({\r\n  selector: 'app-dialog-type-data',\r\n  templateUrl: './dialog-type-data.component.html',\r\n  styleUrls: ['./dialog-type-data.component.scss']\r\n})\r\nexport class DialogTypeDataComponent implements OnInit {\r\n\r\n  form:FormGroup;\r\n  constructor(public dialogRef: MatDialogRef<DialogTypeDataComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: TypeData,\r\n    private typeDataSv: TypeDataService,private formBuilder:FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.form=this.formBuilder.group(\r\n      {\r\n        code:[''],\r\n        name:['']\r\n      }\r\n    )\r\n  }\r\n  onNoClick(){\r\n    this.dialogRef.close();\r\n  }\r\n  submit(){\r\n    const typeData:TypeData=this.form.value\r\n    this.typeDataSv.add(typeData)\r\n    this.dialogRef.close();\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { TypeData } from '../../../models/type-data';\r\nimport { tap } from 'rxjs/operators';\r\nconst DOMAIN = \"\"\r\n@Injectable()\r\nexport class TypeDataService {\r\n  typeDataSubject = new BehaviorSubject<TypeData[]>([])\r\n  get typeData$() {\r\n    return this.typeDataSubject.asObservable();\r\n  }\r\n  constructor(private http: HttpClient) {\r\n    this.getList();\r\n  }\r\n\r\n  getList() {\r\n    this.http.get(\"type-data\").subscribe(\r\n      (res: any) => this.typeDataSubject.next(res)\r\n    )\r\n  }\r\n  add(typeData: TypeData) {\r\n    this.http.post(\"type-data\", typeData).subscribe(\r\n      (res: any) => {\r\n        const newList = [res, ...this.typeDataSubject.value];\r\n        {\r\n          this.typeDataSubject.next(newList)\r\n        }\r\n      }\r\n    )\r\n  }\r\n  update(typeData: TypeData) {\r\n    return this.http.patch(\"type-data\", typeData).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.typeDataSubject\r\n          const index = value.findIndex(e => e.id == typeData.id)\r\n          const newList = [...value]\r\n          newList[index] = typeData\r\n          this.typeDataSubject.next(newList)\r\n        }\r\n      )\r\n    )\r\n  }\r\n  delete(id: number) {\r\n    this.http.delete(\"type-data/\" + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.typeDataSubject\r\n        const newList = value.filter(e => e.id != id)\r\n        this.typeDataSubject.next(newList)\r\n      }\r\n    )\r\n  }\r\n}","export default \"table {\\n  width: 100%;\\n}\\n\\n#addNew {\\n  width: 300px;\\n  height: 50px;\\n  margin: 5px;\\n  background-color: #2020cf;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkbWluL3NyYy9hcHAvbW9kdWxlcy90eXBlLWRhdGEvQzpcXFVzZXJzXFxLSU5HXFxEZXNrdG9wXFxFY29ub21pYy1TdGF0aXN0aWNcXGUtc3RhdGlzdGljc1xcVUlcXHByb2plY3RzL0FkbWluXFxzcmNcXGFwcFxcbW9kdWxlc1xcdHlwZS1kYXRhXFx0eXBlLWRhdGEuY29tcG9uZW50LnNjc3MiLCJBZG1pbi9zcmMvYXBwL21vZHVsZXMvdHlwZS1kYXRhL3R5cGUtZGF0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7QUNDSjs7QURDQTtFQUNJLFlBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtBQ0VKIiwiZmlsZSI6IkFkbWluL3NyYy9hcHAvbW9kdWxlcy90eXBlLWRhdGEvdHlwZS1kYXRhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4jYWRkTmV3e1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgbWFyZ2luOjVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigzMiwgMzIsIDIwNyk7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn0iLCJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jYWRkTmV3IHtcbiAgd2lkdGg6IDMwMHB4O1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbjogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMGNmO1xuICBjb2xvcjogd2hpdGU7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TypeData } from '../../models/type-data';\r\nimport { TypeDataService } from './services/type-data.service';\r\nimport { ConfirmDialogService } from '../../@lib/services/confirm-dialog.service';\r\nimport { DialogTypeDataComponent } from './dialog-type-data/dialog-type-data.component';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-type-data',\r\n  templateUrl: './type-data.component.html',\r\n  styleUrls: ['./type-data.component.scss']\r\n})\r\nexport class TypeDataComponent implements OnInit {\r\n  displayedColumns: string[] = [\"position\", \"code\", \"name\", \"action\"]\r\n  typeData: TypeData[] = null;\r\n  editIndex = null;\r\n  currentTypeData: TypeData = null;\r\n  oldTypeData: TypeData = null;\r\n  constructor(private typeDataSv: TypeDataService, private confirmDialog: ConfirmDialogService, private dialog: MatDialog) { }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogTypeDataComponent, {\r\n      data: { typeData: this.typeData }\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    this.typeDataSv.typeData$.subscribe(l => this.typeData = l)\r\n  }\r\n  toggleEdit(id: number, typeData: TypeData) {\r\n    this.editIndex = id\r\n    this.currentTypeData = typeData\r\n    this.oldTypeData = { ...typeData }\r\n  }\r\n  cancelEdit() {\r\n    this.currentTypeData.code = this.oldTypeData.code;\r\n    this.currentTypeData.name = this.oldTypeData.name;\r\n    this.editIndex = this.currentTypeData = null;\r\n  }\r\n  updateTypeData() {\r\n    this.typeDataSv.update(this.currentTypeData).subscribe(\r\n      _ => this.currentTypeData = this.editIndex = null\r\n    )\r\n  }\r\n  deleteTyteData(id: number) {\r\n    this.confirmDialog.show().then(\r\n      res => {\r\n        if (res) {\r\n          this.typeDataSv.delete(id)\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TypeDataComponent } from './type-data.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MatSelectModule, MatInputModule, MatTableModule, MatFormFieldModule, MatTabsModule, MatDialogModule, MatButtonModule } from '@angular/material';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { LibModule } from '../../@lib/lib.module';\r\nimport { TypeDataService } from './services/type-data.service';\r\nimport { DialogTypeDataComponent } from './dialog-type-data/dialog-type-data.component';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: TypeDataComponent,\r\n    children: []\r\n  }\r\n]\r\n@NgModule({\r\n  declarations: [TypeDataComponent, DialogTypeDataComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES),\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    LibModule\r\n  ],\r\n  providers:[TypeDataService],\r\n  entryComponents:[DialogTypeDataComponent]\r\n})\r\nexport class TypeDataModule { }\r\n"],"sourceRoot":"webpack:///","file":"modules-type-data-type-data-module-es5.js"}