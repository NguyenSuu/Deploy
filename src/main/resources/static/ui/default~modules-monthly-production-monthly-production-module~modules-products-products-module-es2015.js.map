{"version":3,"sources":["./src/app/@lib/components/confirm/confirm.component.ts","./src/app/@lib/lib.module.ts","./src/app/@lib/services/confirm-dialog.service.ts","./src/app/modules/fields/services/fields.service.ts","./src/app/modules/product-line/services/product-line.service.ts","./src/app/modules/products/services/product.service.ts","./src/app/modules/units/services/units.service.ts"],"names":[],"mappings":"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","file":"default~modules-monthly-production-monthly-production-module~modules-products-products-module-es2015.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  template: `\r\n    <p>\r\n      {{ data.message }}\r\n    </p>\r\n\r\n    <div>\r\n      <button mat-button (click)=\"confirm()\">Có</button>\r\n\r\n      <button mat-button (click)=\"onNoClick()\" >Hủy</button>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ConfirmComponent {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private dialogRef: MatDialogRef<ConfirmComponent>) { }\r\n\r\n  confirm() {\r\n    this.dialogRef.close(true)\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfirmComponent } from './components/confirm/confirm.component';\r\nimport { ConfirmDialogService } from './services/confirm-dialog.service';\r\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConfirmComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [\r\n    ConfirmDialogService\r\n  ],\r\n  entryComponents: [\r\n    ConfirmComponent\r\n  ]\r\n})\r\nexport class LibModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfirmComponent } from '../components/confirm/confirm.component';\r\n\r\n@Injectable()\r\nexport class ConfirmDialogService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  async show(message = \"Xác nhận\"): Promise<boolean> {\r\n    let dialogRef = this.dialog.open(ConfirmComponent, {\r\n      data: { message },\r\n    })\r\n\r\n    const result: boolean  = await dialogRef.afterClosed().toPromise();\r\n\r\n    return new Promise(\r\n      (res, rej) => {\r\n        if (result) {\r\n          res(true)\r\n          \r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Fields } from '../../../models/field';\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\n\r\nexport class FieldsService {\r\n  fieldsSubject = new BehaviorSubject<Fields[]>([]);\r\n\r\n  get fields$() {\r\n    return this.fieldsSubject.asObservable();\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    this.getList();\r\n  }\r\n  \r\n  getList() {\r\n    this.httpClient.get(\"fields\").subscribe(\r\n      (res: any) => this.fieldsSubject.next(res)\r\n    )\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.httpClient.delete('fields/' + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.fieldsSubject\r\n        const newList = value.filter(e => e.id != id)\r\n        this.fieldsSubject.next(newList)\r\n      }\r\n    )\r\n  }\r\n\r\n  update(field: Fields) {\r\n    return this.httpClient.patch(\"fields\", field).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.fieldsSubject\r\n\r\n          const index = value.findIndex(e => e.id == field.id)\r\n\r\n          const newList = [...value]\r\n\r\n          newList[index] = field;\r\n\r\n          this.fieldsSubject.next(newList)\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  addField(field: Fields[]) {\r\n    this.httpClient.post(\"fields\", field).subscribe(\r\n      (res: any) => {\r\n        const newList = [...res, ...this.fieldsSubject.value];\r\n        {\r\n          this.fieldsSubject.next(newList);\r\n        }\r\n      }\r\n    )\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, forkJoin } from 'rxjs';\r\nimport { ProductLine } from '../../../models/product-line';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Fields } from '../../../models/field';\r\nimport { tap, map, distinct } from 'rxjs/operators';\r\nimport { ConfirmDialogService } from '../../../@lib/services/confirm-dialog.service';\r\nimport { FieldsService } from '../../fields/services/fields.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductLineService {\r\n  private productLineSubject = new BehaviorSubject<ProductLine[]>([]);\r\n\r\n  constructor(private httpClient: HttpClient, private fieldSV: FieldsService) {\r\n    this.getList();\r\n  }\r\n\r\n  get productLine$() {\r\n    return this.productLineSubject.asObservable();\r\n  }\r\n\r\n  add(products: ProductLine[]) {\r\n    this.httpClient.post(\"product-line\", products).subscribe(\r\n      (res: any) => {\r\n        res.map(e => {\r\n          const newList = [e, ...this.productLineSubject.value];\r\n          this.productLineSubject.next(newList);\r\n        }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.httpClient.delete(\"product-line/\" + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.productLineSubject\r\n        const newList = value.filter(e => e.id != id)\r\n        this.productLineSubject.next(newList)\r\n      }\r\n    )\r\n  }\r\n\r\n  update(productL: ProductLine) {\r\n    return this.httpClient.patch(\"product-line\", productL).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.productLineSubject;\r\n\r\n          const index = value.findIndex(e => e.id == productL.id);\r\n\r\n          let newList: any = [...value];\r\n\r\n          newList[index] = productL;\r\n\r\n          this.fieldSV.fields$.subscribe(\r\n\r\n            fieldList => {\r\n            \r\n              const fL = fieldList.find(e => e.id == productL.f_id)\r\n            \r\n              productL.field = fL;\r\n            \r\n            }\r\n          );\r\n          this.productLineSubject.next(newList);\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  getList() {\r\n    this.httpClient.get(\"product-line\").subscribe(\r\n      (res: any) => this.productLineSubject.next(res))\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, forkJoin } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Products } from '../../../models/product';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ProductLineService } from '../../product-line/services/product-line.service';\r\nimport { UnitsService } from '../../units/services/units.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ProductService {\r\n  productsSubject = new BehaviorSubject<Products[]>([]);\r\n \r\n  constructor(private httpCilent: HttpClient,\r\n    private productLineService: ProductLineService,private unitsService:UnitsService) {\r\n    this.getList();\r\n  }\r\n\r\n  get products$() {\r\n    return this.productsSubject.asObservable();\r\n  }\r\n  getList() {\r\n    this.httpCilent.get(\"products\").subscribe(\r\n      (res:any) => this.productsSubject.next(res)\r\n    )\r\n    \r\n  }\r\n\r\n  add(products: Products[]) {\r\n    this.httpCilent.post(\"products\", products).subscribe(\r\n      (res: any) => {\r\n        console.log('them moi thanh cong')\r\n        res.map(\r\n          e => {\r\n            const newList = [e, ...this.productsSubject.value]\r\n            this.productsSubject.next(newList)\r\n          })\r\n      }\r\n    )\r\n  }\r\n\r\n  update(product: Products) {\r\n    return this.httpCilent.patch(\"products\", product).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.productsSubject;\r\n\r\n          const index = value.findIndex(e => e.id == product.id);\r\n\r\n          const newList: any = [...value];\r\n\r\n          newList[index] = product;\r\n\r\n          this.productLineService.productLine$.subscribe(\r\n            pList => {\r\n              const pL = pList.find(e => e.id == product.pL_id)\r\n              product.productLine = pL;\r\n            }\r\n          );\r\n          this.unitsService.units$.subscribe(\r\n            uList => {\r\n              const uL = uList.find(e => e.id == product.u_id)\r\n              product.units = uL;\r\n            }\r\n          );\r\n\r\n          this.productsSubject.next(newList);\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  delete(id: number) {\r\n\r\n    this.httpCilent.delete(\"products/\" + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.productsSubject;\r\n        const newList = value.filter(e => e.id != id);\r\n        this.productsSubject.next(newList);\r\n      }\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Units } from '../../../models/units';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\nexport class UnitsService {\r\n  unitsSubject = new BehaviorSubject<Units[]>([]);\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.getList();\r\n\r\n  }\r\n  get units$() {\r\n    return this.unitsSubject.asObservable();\r\n  }\r\n  getList() {\r\n    this.http.get(\"units\").subscribe(\r\n      (res: any) => this.unitsSubject.next(res)\r\n    )\r\n  }\r\n  update(unit: Units) {\r\n    return this.http.patch(\"units\", unit).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.unitsSubject\r\n          const index = value.findIndex(e => e.id == unit.id)\r\n          const newList = [...value]\r\n          newList[index] = unit\r\n          this.unitsSubject.next(newList)\r\n        }\r\n      )\r\n    )\r\n  }\r\n  add(unit: Units[]) {\r\n    this.http.post(\"units\", unit).subscribe(\r\n      (res: any) => {\r\n        res.map(\r\n          e => {\r\n            const newList = [e, ...this.unitsSubject.value];\r\n            this.unitsSubject.next(newList)\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n  delete(id: number) {\r\n    this.http.delete(\"units/\" + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.unitsSubject;\r\n        const newList = value.filter(e => e.id != id);\r\n        this.unitsSubject.next(newList);\r\n      }\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}