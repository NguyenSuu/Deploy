{"version":3,"sources":["src/app/modules/products/dialog/dialog.component.html","src/app/modules/products/products.component.html","src/app/modules/products/dialog/dialog.component.scss","src/app/modules/products/dialog/dialog.component.ts","src/app/modules/products/products.component.scss","src/app/modules/products/products.component.ts","src/app/modules/products/products.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<h1 mat-dialog-title>Thêm mới sản phẩm</h1>\\r\\n<div mat-dialog-content>\\r\\n    <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n        <div fxFlex=\\\"10\\\" fxFlex.xs=\\\"10\\\"></div>\\r\\n        <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label>Tên ngành</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"fieldSelectedId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let f of fieldService.field$ | async\\\" [value]=\\\"f.id\\\">\\r\\n                        {{f.name}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\" fxFlex.xs=\\\"10\\\"></div>\\r\\n        <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label>Tên dòng sản phẩm</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"plId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let pL of nganhHienThi$ | async\\\" [value]=\\\"pL.id\\\">\\r\\n                        {{pL.name}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-content>\\r\\n    <div [formGroup]=\\\"form\\\">\\r\\n        <div formArrayName=\\\"products\\\" *ngFor=\\\"let control of productsControl.controls; index as i\\\">\\r\\n            <form class=\\\"example-form\\\" [formGroupName]=\\\"i\\\">\\r\\n                <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n                    <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Tên sản phẩm</mat-label>\\r\\n                            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Coffee\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                    <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Mã sản phẩm</mat-label>\\r\\n                            <input matInput formControlName=\\\"code\\\" placeholder=\\\"02\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                    <div fxFlex=\\\"20\\\" fxFlex.xs=\\\"20\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Đơn vị tính</mat-label>\\r\\n                            <mat-select formControlName=\\\"u_id\\\">\\r\\n                                <mat-option *ngFor=\\\"let u of unitService.unit$ | async\\\" [value]=\\\"u.id\\\">\\r\\n                                    {{u.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addMore()\\\">Thêm nhiều</button>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Hủy</button>\\r\\n    <button mat-raised-button (click)=\\\"submit()\\\">Xác nhận</button>\\r\\n</div>\"","export default \"<button id=\\\"addNew\\\" mat-raised-button (click)=\\\"openDialog()\\\">Thêm mới</button>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header card-header-primary\\\">\\r\\n        <h4 class=\\\"card-title\\\">Sản phẩm</h4>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <table mat-table [dataSource]=\\\"showProducts\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <!-- Position Column -->\\r\\n            <ng-container matColumnDef=\\\"position\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as i\\\"> {{i + 1}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Code Column -->\\r\\n            <ng-container matColumnDef=\\\"code\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Mã sản phẩm </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element;index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index==editIndex;else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentProduct.code\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.code}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Tên sản phẩm </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentProduct.name\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"units_id\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Đơn vị tính </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-select [(ngModel)]=\\\"element.u_id\\\">\\r\\n                                <mat-option *ngFor=\\\"let u of unitService.unit$ | async\\\" [value]=\\\"u.id\\\">\\r\\n                                    {{u.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element?.units?.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"product_line_id\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Mã dòng sản phẩm </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-select [(ngModel)]=\\\"element.pL_id\\\">\\r\\n                                <mat-option *ngFor=\\\"let pL of productLineService.productLine$ | async\\\" [value]=\\\"pL.id\\\">\\r\\n                                    {{pL.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element?.productLine?.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"delete\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Thao tác </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else acceptButton\\\">\\r\\n                        <button mat-raised-button (click)=\\\"updateProduct()\\\">Xác nhận</button>\\r\\n                        <button mat-raised-button (click)=\\\"cancelEdit()\\\">Hủy</button>\\r\\n                    </ng-container>\\r\\n                    <ng-template #acceptButton>\\r\\n                        <ng-container *ngIf=\\\"editIndex == null\\\">\\r\\n                            <button mat-raised-button (click)=\\\"toggleEdit(index, element)\\\">Sửa</button>\\r\\n                            <button mat-raised-button (click)=\\\"deleteProduct(element.id)\\\">Xóa</button>\\r\\n                        </ng-container>\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator [length]=\\\"products.length\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n        (page)=\\\"onChangePage($event)\\\">\\r\\n    </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","export default \"button {\\n  margin: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL0FkbWluL3NyYy9hcHAvbW9kdWxlcy9wcm9kdWN0cy9kaWFsb2cvQzpcXFVzZXJzXFxLSU5HXFxEZXNrdG9wXFxFY29ub21pYy1TdGF0aXN0aWNcXGUtc3RhdGlzdGljc1xcVUkvcHJvamVjdHNcXEFkbWluXFxzcmNcXGFwcFxcbW9kdWxlc1xccHJvZHVjdHNcXGRpYWxvZ1xcZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwicHJvamVjdHMvQWRtaW4vc3JjL2FwcC9tb2R1bGVzL3Byb2R1Y3RzL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FDQ0oiLCJmaWxlIjoicHJvamVjdHMvQWRtaW4vc3JjL2FwcC9tb2R1bGVzL3Byb2R1Y3RzL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XHJcbiAgICBtYXJnaW46IDAuNXJlbTtcclxufSIsImJ1dHRvbiB7XG4gIG1hcmdpbjogMC41cmVtO1xufSJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ProductService } from '../services/product.service';\r\nimport { Products } from '../../../models/product';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ProductLineService } from '../../product-line/services/product-line.service';\r\nimport { FieldsService } from '../../fields/services/fields.service';\r\nimport { UnitsService } from '../../units/services/units.service';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  form: FormGroup;\r\n  plId: any = null;\r\n  fieldSelectedId = null;\r\n  constructor(public dialogRef: MatDialogRef<DialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Products,\r\n    public productSv: ProductService,\r\n    private formBuilder: FormBuilder,\r\n    public productLineService: ProductLineService,\r\n    public fieldService: FieldsService,\r\n    public unitService: UnitsService\r\n  ) { }\r\n  onNoClick(): void {\r\n    this.dialogRef.close({\r\n    });\r\n  }\r\n\r\n  get nganhHienThi$() {\r\n    return this.productLineService.productLine$.pipe(\r\n      map(listNganh => {\r\n        return listNganh.filter(e => e.f_id == this.fieldSelectedId)\r\n      })\r\n    )\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      products: this.formBuilder.array([])\r\n    })\r\n    this.addMore();\r\n    this.productLineService.getList()\r\n  }\r\n  get productsControl() {\r\n    return this.form.controls.products as FormArray;\r\n  }\r\n  addMore() {\r\n    this.productsControl.push(this.formBuilder.group({\r\n      name: [''],\r\n      code: ['', Validators.required],\r\n      u_id: [''],\r\n      pL_id: [''],\r\n    }))\r\n  }\r\n\r\n  submit() {\r\n    const { products } = this.form.value;\r\n\r\n    const newProducts = products.map(\r\n      e => {\r\n        return {\r\n          ...e,\r\n          pL_id: this.plId\r\n        }\r\n      }\r\n    )\r\n    this.productSv.add(newProducts);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9BZG1pbi9zcmMvYXBwL21vZHVsZXMvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from './services/product.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Products } from '../../models/product';\r\nimport { MatDialog, PageEvent } from '@angular/material';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { ConfirmDialogService } from '../../@lib/services/confirm-dialog.service';\r\nimport { UnitsService } from '../units/services/units.service';\r\nimport { FieldsService } from '../fields/services/fields.service';\r\nimport { ProductLineService } from '../product-line/services/product-line.service';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  displayedColumns: string[] = ['position', 'code', 'name', 'units_id', 'product_line_id', 'delete'];\r\n  products: Products[] = null;\r\n  showProducts: Products[] = null;\r\n  editIndex = null;\r\n  currentProduct: Products = null;\r\n  oldProduct: Products = null;\r\n  pageSize = 5\r\n  pageSizeOptions = [2, 5, 10, 25]\r\n  pageEvent: PageEvent\r\n  length = 1000\r\n  constructor(public productService: ProductService,\r\n    private fieldService: FieldsService,\r\n    public dialog: MatDialog,\r\n    private confirmDialog: ConfirmDialogService,\r\n    public productLineService:ProductLineService,\r\n    public unitService:UnitsService\r\n  ) { }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      data: { products: this.products }\r\n    });\r\n  }\r\n  cancelEdit() {\r\n    this.currentProduct.code = this.oldProduct.code;\r\n    this.currentProduct.name = this.oldProduct.name;\r\n    this.currentProduct.pL_id = this.oldProduct.pL_id;\r\n    this.currentProduct.u_id = this.oldProduct.u_id;\r\n    this.editIndex = this.currentProduct = null;\r\n  }\r\n  updateProduct() {\r\n    this.productService.update(this.currentProduct).subscribe(\r\n      _ => this.currentProduct = this.editIndex = null\r\n    );\r\n  }\r\n  async deleteProduct(id: number) {\r\n    this.confirmDialog.show('Bạn chắc chắn muốn xóa?').then(res => {\r\n      if (res) {\r\n        this.productService.delete(id);\r\n      }\r\n    });\r\n  }\r\n  toggleEdit(index: number, product: Products) {\r\n    this.editIndex = index;\r\n    this.currentProduct = product;\r\n    this.oldProduct = { ...product };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.productService.getList()\r\n    this.productService.product$.subscribe(l => {\r\n      this.products = l\r\n      const { pageSize, } = this\r\n      this.onChangePage({\r\n        length: this.products.length,\r\n        pageSize,\r\n        pageIndex: 0,\r\n        previousPageIndex: null\r\n      })\r\n    })\r\n\r\n  }\r\n  onChangePage({ length,\r\n    pageIndex,\r\n    pageSize,\r\n    previousPageIndex }) {\r\n    console.log(length,\r\n      pageIndex,\r\n      pageSize,\r\n      previousPageIndex)\r\n    this.showProducts = [...this.products].slice(pageIndex * pageSize, pageIndex * pageSize + pageSize)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductsComponent } from './products.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatSelectModule, MatInputModule, MatTableModule, MatFormFieldModule, MatTabsModule, MatDialogModule, MatButtonModule, MatPaginatorModule } from '@angular/material';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ProductService } from './services/product.service';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { LibModule } from '../../@lib/lib.module';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductsComponent,\r\n    children: []\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [ProductsComponent, DialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES),\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    LibModule,\r\n    MatPaginatorModule\r\n  ],\r\n  providers:[ProductService],\r\n  entryComponents:[DialogComponent]\r\n\r\n})\r\nexport class ProductsModule { }\r\n"],"sourceRoot":"webpack:///","file":"modules-products-products-module-es5.js"}