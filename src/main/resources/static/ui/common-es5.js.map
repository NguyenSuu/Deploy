{"version":3,"sources":["src/app/modules/type-data/services/type-data.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,QAAa,eAAb;AAAA;AAAA;AAKE,+BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAJpB,aAAA,eAAA,GAAkB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAgC,EAAhC,CAAlB;AAKE,aAAK,OAAL;AACD;;AAPH;AAAA;AAAA,kCASS;AAAA;;AACL,eAAK,IAAL,CAAU,GAAV,CAAc,WAAd,EAA2B,SAA3B,CACE,UAAC,GAAD;AAAA,mBAAc,KAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B,GAA1B,CAAd;AAAA,WADF;AAGD;AAbH;AAAA;AAAA,4BAcM,QAdN,EAc0B;AAAA;;AACtB,eAAK,IAAL,CAAU,IAAV,CAAe,WAAf,EAA4B,QAA5B,EAAsC,SAAtC,CACE,UAAC,GAAD,EAAa;AACX,YAAA,GAAG,CAAC,GAAJ,CACE,UAAA,CAAC,EAAG;AACF,kBAAM,OAAO,IAAI,CAAJ,4BAAU,MAAI,CAAC,eAAL,CAAqB,KAA/B,EAAb;;AACA,cAAA,MAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B,OAA1B;AACD,aAJH;AAMD,WARH;AAUD;AAzBH;AAAA;AAAA,+BA0BS,QA1BT,EA0B2B;AAAA;;AACvB,iBAAO,KAAK,IAAL,CAAU,KAAV,CAAgB,WAAhB,EAA6B,QAA7B,EAAuC,IAAvC,CACL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CACE,UAAC,GAAD,EAAa;AAAA,gBACH,KADG,GACO,MAAI,CAAC,eADZ,CACH,KADG;AAEX,gBAAM,KAAK,GAAG,KAAK,CAAC,SAAN,CAAgB,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,EAAF,IAAQ,QAAQ,CAAC,EAArB;AAAA,aAAjB,CAAd;;AACA,gBAAM,OAAO,sBAAO,KAAP,CAAb;;AACA,YAAA,OAAO,CAAC,KAAD,CAAP,GAAiB,QAAjB;;AACA,YAAA,MAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B,OAA1B;AACD,WAPH,CADK,CAAP;AAWD;AAtCH;AAAA;AAAA,gCAuCS,EAvCT,EAuCmB;AAAA;;AACf,eAAK,IAAL,WAAiB,eAAe,EAAhC,EAAoC,SAApC,CACE,UAAC,GAAD,EAAa;AAAA,gBACH,KADG,GACO,MAAI,CAAC,eADZ,CACH,KADG;AAEX,gBAAM,OAAO,GAAG,KAAK,CAAC,MAAN,CAAa,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,EAAF,IAAQ,EAAZ;AAAA,aAAd,CAAhB;;AACA,YAAA,MAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B,OAA1B;AACD,WALH;AAOD;AA/CH;AAAA;AAAA,4BAEe;AACX,iBAAO,KAAK,eAAL,CAAqB,YAArB,EAAP;AACD;AAJH;;AAAA;AAAA,OAAA;;;;cAK4B,iDAAA,CAAA,YAAA;;;;AALf,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH3B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAC;AADD,KAAX,CAG2B,CAAA,EAAf,eAAe,CAAf","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { TypeData } from '../../../models/type-data';\r\nimport { tap } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\nexport class TypeDataService {\r\n  typeDataSubject = new BehaviorSubject<TypeData[]>([])\r\n  get typeData$() {\r\n    return this.typeDataSubject.asObservable();\r\n  }\r\n  constructor(private http: HttpClient) {\r\n    this.getList();\r\n  }\r\n\r\n  getList() {\r\n    this.http.get(\"type-data\").subscribe(\r\n      (res: any) => this.typeDataSubject.next(res)\r\n    )\r\n  }\r\n  add(typeData: TypeData[]) {\r\n    this.http.post(\"type-data\", typeData).subscribe(\r\n      (res: any) => {\r\n        res.map(\r\n          e => {\r\n            const newList = [e, ...this.typeDataSubject.value];\r\n            this.typeDataSubject.next(newList)\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n  update(typeData: TypeData) {\r\n    return this.http.patch(\"type-data\", typeData).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.typeDataSubject\r\n          const index = value.findIndex(e => e.id == typeData.id)\r\n          const newList = [...value]\r\n          newList[index] = typeData\r\n          this.typeDataSubject.next(newList)\r\n        }\r\n      )\r\n    )\r\n  }\r\n  delete(id: number) {\r\n    this.http.delete(\"type-data/\" + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.typeDataSubject\r\n        const newList = value.filter(e => e.id != id)\r\n        this.typeDataSubject.next(newList)\r\n      }\r\n    )\r\n  }\r\n}"],"sourceRoot":"webpack:///","file":"common-es5.js"}