{"version":3,"sources":["src/app/modules/units/dialog-unit/dialog-unit.component.html","src/app/modules/units/units.component.html","src/app/@lib/components/confirm/confirm.component.ts","src/app/@lib/lib.module.ts","src/app/@lib/services/confirm-dialog.service.ts","src/app/modules/units/dialog-unit/dialog-unit.component.scss","src/app/modules/units/dialog-unit/dialog-unit.component.ts","src/app/modules/units/services/units.service.ts","src/app/modules/units/units.component.scss","src/app/modules/units/units.component.ts","src/app/modules/units/units.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<h1 mat-dialog-title>Thêm mới đơn vị tính</h1>\\r\\n<div mat-dialog-content>\\r\\n    <div [formGroup]=\\\"form\\\">\\r\\n        <div formArrayName=\\\"units\\\" *ngFor=\\\"let control of UnitsControl.controls; index as i\\\">\\r\\n            <form [formGroupName]=\\\"i\\\">\\r\\n                <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n                    <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Tên đơn vị tính</mat-label>\\r\\n                            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Tấn\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                    <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Mã đơn vị</mat-label>\\r\\n                            <input matInput formControlName=\\\"code\\\" placeholder=\\\"01\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                    <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Kí hiệu</mat-label>\\r\\n                            <input matInput formControlName=\\\"sign\\\" placeholder=\\\"t\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addMore()\\\">Thêm nhiều</button>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Hủy</button>\\r\\n    <button mat-raised-button (click)=\\\"submit()\\\">Xác nhận</button>\\r\\n</div>\"","export default \"<button id=\\\"addNew\\\" mat-raised-button (click)=\\\"openDialog()\\\">Thêm mới</button>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header card-header-primary\\\">\\r\\n        <h4 class=\\\"card-title\\\">Đơn vị tính</h4>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <table mat-table [dataSource]=\\\"showUnit\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <!-- Position Column -->\\r\\n            <ng-container matColumnDef=\\\"position\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as i\\\"> {{i + 1}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Code Column -->\\r\\n            <ng-container matColumnDef=\\\"code\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Mã đơn vị tính </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element;index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index==editIndex;else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentUnit.code\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.code}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Tên đơn vị tính</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentUnit.name\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"sign\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kí hiệu </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentUnit.sign\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.sign}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"action\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Thao tác </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else acceptButton\\\">\\r\\n                        <button mat-raised-button (click)=\\\"updateUnit()\\\">Xác nhận</button>\\r\\n                        <button mat-raised-button (click)=\\\"cancelEdit()\\\">Hủy</button>\\r\\n                    </ng-container>\\r\\n                    <ng-template #acceptButton>\\r\\n                        <ng-container *ngIf=\\\"editIndex == null\\\">\\r\\n                            <button mat-raised-button (click)=\\\"toggleEdit(index, element)\\\">Sửa</button>\\r\\n                            <button mat-raised-button (click)=\\\"deleteUnit(element.id)\\\">Xóa</button>\\r\\n                        </ng-container>\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator [length]=\\\"unit.length\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n            (page)=\\\"onChangePage($event)\\\">\\r\\n        </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  template: `\r\n    <p>\r\n      {{ data.message }}\r\n    </p>\r\n\r\n    <div>\r\n      <button mat-button (click)=\"confirm()\">Có</button>\r\n\r\n      <button mat-button (click)=\"onNoClick()\" >Hủy</button>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ConfirmComponent {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private dialogRef: MatDialogRef<ConfirmComponent>) { }\r\n\r\n  confirm() {\r\n    this.dialogRef.close(true)\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfirmComponent } from './components/confirm/confirm.component';\r\nimport { ConfirmDialogService } from './services/confirm-dialog.service';\r\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConfirmComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [\r\n    ConfirmDialogService\r\n  ],\r\n  entryComponents: [\r\n    ConfirmComponent\r\n  ]\r\n})\r\nexport class LibModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfirmComponent } from '../components/confirm/confirm.component';\r\n\r\n@Injectable()\r\nexport class ConfirmDialogService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  async show(message = \"Xác nhận\"): Promise<boolean> {\r\n    let dialogRef = this.dialog.open(ConfirmComponent, {\r\n      data: { message },\r\n    })\r\n\r\n    const result: boolean  = await dialogRef.afterClosed().toPromise();\r\n\r\n    return new Promise(\r\n      (res, rej) => {\r\n        if (result) {\r\n          res(true)\r\n          \r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"button {\\n  margin: 0.5rem;\\n}\\n\\nform > * {\\n  margin: 5px 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL0FkbWluL3NyYy9hcHAvbW9kdWxlcy91bml0cy9kaWFsb2ctdW5pdC9DOlxcVXNlcnNcXEtJTkdcXERlc2t0b3BcXEVjb25vbWljLVN0YXRpc3RpY1xcZS1zdGF0aXN0aWNzXFxVSS9wcm9qZWN0c1xcQWRtaW5cXHNyY1xcYXBwXFxtb2R1bGVzXFx1bml0c1xcZGlhbG9nLXVuaXRcXGRpYWxvZy11bml0LmNvbXBvbmVudC5zY3NzIiwicHJvamVjdHMvQWRtaW4vc3JjL2FwcC9tb2R1bGVzL3VuaXRzL2RpYWxvZy11bml0L2RpYWxvZy11bml0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtBQ0NKOztBRENBO0VBQ0ksYUFBQTtBQ0VKIiwiZmlsZSI6InByb2plY3RzL0FkbWluL3NyYy9hcHAvbW9kdWxlcy91bml0cy9kaWFsb2ctdW5pdC9kaWFsb2ctdW5pdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcclxuICAgIG1hcmdpbjogMC41cmVtO1xyXG59XHJcbmZvcm0gPiAqIHtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgfSIsImJ1dHRvbiB7XG4gIG1hcmdpbjogMC41cmVtO1xufVxuXG5mb3JtID4gKiB7XG4gIG1hcmdpbjogNXB4IDA7XG59Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Units } from '../../../models/units';\r\nimport { UnitsService } from '../services/units.service';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-dialog-unit',\r\n  templateUrl: './dialog-unit.component.html',\r\n  styleUrls: ['./dialog-unit.component.scss']\r\n})\r\nexport class DialogUnitComponent implements OnInit {\r\n  form: FormGroup;\r\n  constructor(public dialogRef: MatDialogRef<DialogUnitComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Units,\r\n    private unitSv: UnitsService,\r\n    private formBuider: FormBuilder) { }\r\n  onNoClick() {\r\n    this.dialogRef.close();\r\n  }\r\n  submit() {\r\n    const {units} = this.form.value;\r\n    this.unitSv.add(units);\r\n    this.dialogRef.close();\r\n  }\r\n  ngOnInit() {\r\n    this.form = this.formBuider.group({\r\n      units: this.formBuider.array([])\r\n\r\n    })\r\n    this.addMore();\r\n  }\r\n  get UnitsControl() {\r\n    return this.form.controls.units as FormArray\r\n  }\r\n\r\n  addMore() {\r\n    this.UnitsControl.push(this.formBuider.group({\r\n      name: [''],\r\n      code: [''],\r\n      sign: ['']\r\n    }))\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Units } from '../../../models/units';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\nexport class UnitsService {\r\n  unitsSubject = new BehaviorSubject<Units[]>([]);\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.getList();\r\n\r\n  }\r\n  get unit$() {\r\n    return this.unitsSubject.asObservable();\r\n  }\r\n  getList() {\r\n    this.http.get(\"units\").subscribe(\r\n      (res: any) => this.unitsSubject.next(res)\r\n    )\r\n  }\r\n  update(unit: Units) {\r\n    return this.http.patch(\"units\", unit).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.unitsSubject\r\n          const index = value.findIndex(e => e.id == unit.id)\r\n          const newList = [...value]\r\n          newList[index] = unit\r\n          this.unitsSubject.next(newList)\r\n        }\r\n      )\r\n    )\r\n  }\r\n  add(unit: Units[]) {\r\n    this.http.post(\"units\", unit).subscribe(\r\n      (res: any) => {\r\n        res.map(\r\n          e => {\r\n            const newList = [e, ...this.unitsSubject.value];\r\n            this.unitsSubject.next(newList)\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n  delete(id: number) {\r\n    this.http.delete(\"units/\" + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.unitsSubject;\r\n        const newList = value.filter(e => e.id != id);\r\n        this.unitsSubject.next(newList);\r\n      }\r\n    )\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9BZG1pbi9zcmMvYXBwL21vZHVsZXMvdW5pdHMvdW5pdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UnitsService } from './services/units.service';\r\nimport { Units } from '../../models/units';\r\nimport { ConfirmDialogService } from '../../@lib/services/confirm-dialog.service';\r\nimport { MatDialog, PageEvent } from '@angular/material';\r\nimport { DialogUnitComponent } from './dialog-unit/dialog-unit.component';\r\n\r\n@Component({\r\n  selector: 'app-units',\r\n  templateUrl: './units.component.html',\r\n  styleUrls: ['./units.component.scss']\r\n})\r\nexport class UnitsComponent implements OnInit {\r\n  displayedColumns: string[] = [\"position\", \"code\", \"name\", \"sign\", \"action\"]\r\n  constructor(private unitsSv: UnitsService,private dialog:MatDialog, private confirm: ConfirmDialogService) { }\r\n  unit: Units[] = null;\r\n  showUnit:Units[]=null;\r\n  editIndex = null;\r\n  currentUnit: Units = null;\r\n  oldUnit: Units = null;\r\n  \r\n  pageSize = 5\r\n  pageSizeOptions = [2, 5, 10, 25]\r\n  pageEvent: PageEvent\r\n  length = 1000\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogUnitComponent, {\r\n      data: { unit: this.unit }\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    this.unitsSv.unit$.subscribe(l =>{ this.unit = l\r\n      const {pageSize,} =this\r\n      this.onChangePage({\r\n        length:this.unit.length,\r\n        pageSize,\r\n        pageIndex:0,\r\n        previousPageIndex:null\r\n      })\r\n    })\r\n  }\r\n  onChangePage({\r\n    length,pageIndex,pageSize,previousPageIndex\r\n  }){\r\n    this.showUnit=[...this.unit].slice(pageIndex*pageSize,pageIndex  * pageSize + pageSize)\r\n  }\r\n  toggleEdit(index: number, unit: Units) {\r\n    this.editIndex = index;\r\n    this.currentUnit = unit;\r\n    this.oldUnit = { ...unit };\r\n  }\r\n  updateUnit() {\r\n    this.unitsSv.update(this.currentUnit).subscribe(\r\n      _=>this.currentUnit=this.editIndex=null\r\n    )\r\n  }\r\n  cancelEdit() {\r\n    this.currentUnit.code = this.oldUnit.code;\r\n    this.currentUnit.name = this.oldUnit.name;\r\n    this.currentUnit.sign = this.oldUnit.sign;\r\n    this.editIndex = this.currentUnit = null;\r\n  }\r\n  deleteUnit(id: number) {\r\n    this.confirm.show().then(res => {\r\n        if (res) {\r\n          this.unitsSv.delete(id);\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UnitsComponent } from './units.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MatSelectModule, MatInputModule, MatTableModule, MatTabsModule, MatFormFieldModule, MatButtonModule, MatDialogModule, MatPaginatorModule } from '@angular/material';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { UnitsService } from './services/units.service';\r\nimport { LibModule } from '../../@lib/lib.module';\r\nimport { DialogUnitComponent } from './dialog-unit/dialog-unit.component';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: UnitsComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [UnitsComponent, DialogUnitComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES),\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    LibModule,\r\n    MatDialogModule,\r\n    MatPaginatorModule\r\n  ],\r\n  providers:[UnitsService],\r\n  entryComponents:[DialogUnitComponent]\r\n\r\n})\r\nexport class UnitsModule { }\r\n"],"sourceRoot":"webpack:///","file":"modules-units-units-module-es5.js"}