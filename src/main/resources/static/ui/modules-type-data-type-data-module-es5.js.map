{"version":3,"sources":["src/app/modules/type-data/dialog-type-data/dialog-type-data.component.html","src/app/modules/type-data/type-data.component.html","src/app/@lib/components/confirm/confirm.component.ts","src/app/@lib/lib.module.ts","src/app/@lib/services/confirm-dialog.service.ts","src/app/modules/type-data/dialog-type-data/dialog-type-data.component.scss","src/app/modules/type-data/dialog-type-data/dialog-type-data.component.ts","src/app/modules/type-data/type-data.component.scss","src/app/modules/type-data/type-data.component.ts","src/app/modules/type-data/type-data.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<h1 mat-dialog-title>Thêm mới loại dữ liệu</h1>\\r\\n<div mat-dialog-content>\\r\\n    <div [formGroup]=\\\"form\\\">\\r\\n        <div formArrayName=\\\"typeData\\\" *ngFor=\\\"let control of TypeDataControl.controls; index as i\\\">\\r\\n            <form [formGroupName]=\\\"i\\\">\\r\\n                <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n                    <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label> Mã số liệu</mat-label>\\r\\n                            <input matInput formControlName=\\\"code\\\" placeholder=\\\"DL01\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"15\\\" fxFlex.xs=\\\"15\\\"></div>\\r\\n                    <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label> Tên số liệu</mat-label>\\r\\n                            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Thực tế\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addMore()\\\">Thêm nhiều</button>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Hủy</button>\\r\\n    <button mat-raised-button (click)=\\\"submit()\\\">Xác nhận</button>\\r\\n</div>\"","export default \"<button id=\\\"addNew\\\" mat-raised-button (click)=\\\"openDialog()\\\">Thêm mới</button>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header card-header-primary\\\">\\r\\n        <h4 class=\\\"card-title\\\">MÃ LOẠI SỐ LIỆU</h4>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <table mat-table [dataSource]=\\\"typeData\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <!-- Position Column -->\\r\\n            <ng-container matColumnDef=\\\"position\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element;index as i\\\"> {{i+1}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Code Column -->\\r\\n            <ng-container matColumnDef=\\\"code\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Mã số liệu </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element;index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index==editIndex;else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentTypeData.code\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.code}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Tên số liệu </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentTypeData.name\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"action\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Thao tác </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else acceptButton\\\">\\r\\n                        <button mat-raised-button (click)=\\\"updateTypeData()\\\">Xác nhận</button>\\r\\n                        <button mat-raised-button (click)=\\\"cancelEdit()\\\">Hủy</button>\\r\\n                    </ng-container>\\r\\n                    <ng-template #acceptButton>\\r\\n                        <ng-container *ngIf=\\\"editIndex == null\\\">\\r\\n                            <button mat-raised-button (click)=\\\"toggleEdit(index, element)\\\">Sửa</button>\\r\\n                            <button mat-raised-button (click)=\\\"deleteTyteData(element.id)\\\">Xóa</button>\\r\\n                        </ng-container>\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  template: `\r\n    <p>\r\n      {{ data.message }}\r\n    </p>\r\n\r\n    <div>\r\n      <button mat-button (click)=\"confirm()\">Có</button>\r\n\r\n      <button mat-button (click)=\"onNoClick()\" >Hủy</button>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ConfirmComponent {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private dialogRef: MatDialogRef<ConfirmComponent>) { }\r\n\r\n  confirm() {\r\n    this.dialogRef.close(true)\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfirmComponent } from './components/confirm/confirm.component';\r\nimport { ConfirmDialogService } from './services/confirm-dialog.service';\r\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConfirmComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [\r\n    ConfirmDialogService\r\n  ],\r\n  entryComponents: [\r\n    ConfirmComponent\r\n  ]\r\n})\r\nexport class LibModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfirmComponent } from '../components/confirm/confirm.component';\r\n\r\n@Injectable()\r\nexport class ConfirmDialogService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  async show(message = \"Xác nhận\"): Promise<boolean> {\r\n    let dialogRef = this.dialog.open(ConfirmComponent, {\r\n      data: { message },\r\n    })\r\n\r\n    const result: boolean  = await dialogRef.afterClosed().toPromise();\r\n\r\n    return new Promise(\r\n      (res, rej) => {\r\n        if (result) {\r\n          res(true)\r\n          \r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"button {\\n  margin: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL0FkbWluL3NyYy9hcHAvbW9kdWxlcy90eXBlLWRhdGEvZGlhbG9nLXR5cGUtZGF0YS9DOlxcVXNlcnNcXEtJTkdcXERlc2t0b3BcXEVjb25vbWljLVN0YXRpc3RpY1xcZS1zdGF0aXN0aWNzXFxVSS9wcm9qZWN0c1xcQWRtaW5cXHNyY1xcYXBwXFxtb2R1bGVzXFx0eXBlLWRhdGFcXGRpYWxvZy10eXBlLWRhdGFcXGRpYWxvZy10eXBlLWRhdGEuY29tcG9uZW50LnNjc3MiLCJwcm9qZWN0cy9BZG1pbi9zcmMvYXBwL21vZHVsZXMvdHlwZS1kYXRhL2RpYWxvZy10eXBlLWRhdGEvZGlhbG9nLXR5cGUtZGF0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7QUNDSiIsImZpbGUiOiJwcm9qZWN0cy9BZG1pbi9zcmMvYXBwL21vZHVsZXMvdHlwZS1kYXRhL2RpYWxvZy10eXBlLWRhdGEvZGlhbG9nLXR5cGUtZGF0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcclxuICAgIG1hcmdpbjogMC41cmVtO1xyXG59IiwiYnV0dG9uIHtcbiAgbWFyZ2luOiAwLjVyZW07XG59Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { TypeData } from '../../../models/type-data';\r\nimport { TypeDataService } from '../services/type-data.service';\r\n\r\n@Component({\r\n  selector: 'app-dialog-type-data',\r\n  templateUrl: './dialog-type-data.component.html',\r\n  styleUrls: ['./dialog-type-data.component.scss']\r\n})\r\nexport class DialogTypeDataComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  constructor(public dialogRef: MatDialogRef<DialogTypeDataComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: TypeData,\r\n    private typeDataSv: TypeDataService, private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      typeData: this.formBuilder.array([])\r\n    })\r\n    this.addMore();\r\n  }\r\n  get TypeDataControl() {\r\n    return this.form.controls.typeData as FormArray\r\n  }\r\n  addMore() {\r\n    this.TypeDataControl.push(this.formBuilder.group({\r\n      code: ['',[Validators.required]],\r\n      name: ['',[Validators.required]]\r\n    }))\r\n  }\r\n  onNoClick() {\r\n    this.dialogRef.close();\r\n  }\r\n  submit() {\r\n    const {typeData} = this.form.value\r\n    this.typeDataSv.add(typeData)\r\n    this.dialogRef.close();\r\n\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9BZG1pbi9zcmMvYXBwL21vZHVsZXMvdHlwZS1kYXRhL3R5cGUtZGF0YS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TypeData } from '../../models/type-data';\r\nimport { TypeDataService } from './services/type-data.service';\r\nimport { ConfirmDialogService } from '../../@lib/services/confirm-dialog.service';\r\nimport { DialogTypeDataComponent } from './dialog-type-data/dialog-type-data.component';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-type-data',\r\n  templateUrl: './type-data.component.html',\r\n  styleUrls: ['./type-data.component.scss']\r\n})\r\nexport class TypeDataComponent implements OnInit {\r\n  displayedColumns: string[] = [\"position\", \"code\", \"name\", \"action\"]\r\n  typeData: TypeData[] = null;\r\n  editIndex = null;\r\n  currentTypeData: TypeData = null;\r\n  oldTypeData: TypeData = null;\r\n  constructor(private typeDataSv: TypeDataService, private confirmDialog: ConfirmDialogService, private dialog: MatDialog) { }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogTypeDataComponent, {\r\n      data: { typeData: this.typeData }\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    this.typeDataSv.typeData$.subscribe(l => this.typeData = l)\r\n  }\r\n  toggleEdit(id: number, typeData: TypeData) {\r\n    this.editIndex = id\r\n    this.currentTypeData = typeData\r\n    this.oldTypeData = { ...typeData }\r\n  }\r\n  cancelEdit() {\r\n    this.currentTypeData.code = this.oldTypeData.code;\r\n    this.currentTypeData.name = this.oldTypeData.name;\r\n    this.editIndex = this.currentTypeData = null;\r\n  }\r\n  updateTypeData() {\r\n    this.typeDataSv.update(this.currentTypeData).subscribe(\r\n      _ => this.currentTypeData = this.editIndex = null\r\n    )\r\n  }\r\n  deleteTyteData(id: number) {\r\n    this.confirmDialog.show().then(\r\n      res => {\r\n        if (res) {\r\n          this.typeDataSv.delete(id)\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TypeDataComponent } from './type-data.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MatSelectModule, MatInputModule, MatTableModule, MatFormFieldModule, MatTabsModule, MatDialogModule, MatButtonModule } from '@angular/material';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { LibModule } from '../../@lib/lib.module';\r\nimport { TypeDataService } from './services/type-data.service';\r\nimport { DialogTypeDataComponent } from './dialog-type-data/dialog-type-data.component';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: TypeDataComponent,\r\n    children: []\r\n  }\r\n]\r\n@NgModule({\r\n  declarations: [TypeDataComponent, DialogTypeDataComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES),\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    LibModule\r\n  ],\r\n  entryComponents:[DialogTypeDataComponent]\r\n})\r\nexport class TypeDataModule { }\r\n"],"sourceRoot":"webpack:///","file":"modules-type-data-type-data-module-es5.js"}