{"version":3,"sources":["./src/app/modules/monthly-production/dialog-mp/dialog-mp.component.html","./src/app/modules/monthly-production/monthly-production.component.html","./src/app/modules/monthly-production/dialog-mp/dialog-mp.component.scss","./src/app/modules/monthly-production/dialog-mp/dialog-mp.component.ts","./src/app/modules/monthly-production/monthly-production.component.scss","./src/app/modules/monthly-production/monthly-production.component.ts","./src/app/modules/monthly-production/monthly-production.module.ts","./src/app/modules/monthly-production/services/monthly-production.service.ts"],"names":[],"mappings":"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","file":"modules-monthly-production-monthly-production-module-es2015.js","sourcesContent":["export default \"    <h1 mat-dialog-title>Số liệu sản xuất theo tháng</h1>\\r\\n    <div mat-dialog-content>\\r\\n        <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n            <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Năm</mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"year\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n            <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Tháng</mat-label>\\r\\n                    <mat-select  [(ngModel)]=\\\"month_value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <mat-option *ngFor=\\\"let m of month\\\" [value]=\\\"m\\\">\\r\\n                            {{m}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n            <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Huyện/Thị xã</mat-label>\\r\\n                    <mat-select  [(ngModel)]=\\\"district_value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <mat-option *ngFor=\\\"let d of districtService.district$|async\\\" [value]=\\\"d.id\\\">\\r\\n                            {{d.name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div mat-dialog-content>\\r\\n        <div [formGroup]=\\\"form\\\">\\r\\n            <div formArrayName=\\\"mProduction\\\" *ngFor=\\\"let control of mProductionControl.controls;index as i\\\">\\r\\n                <form class=\\\"example-form\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n                        <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-label> Tên sản phẩm</mat-label>\\r\\n                                <mat-select formControlName=\\\"p_id\\\">\\r\\n                                    <mat-option *ngFor=\\\"let p of productService.products$ | async\\\" [value]=\\\"p.id\\\">\\r\\n                                        {{p.name}}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                        <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                            <mat-form-field >\\r\\n                                <mat-label>Kiểu dữ liệu</mat-label>\\r\\n                                <mat-select formControlName=\\\"t_d_id\\\">\\r\\n                                    <mat-option *ngFor=\\\"let t of typeDataSV.typeData$ | async\\\" [value]=\\\"t.id\\\">\\r\\n                                        {{t.name}}\\r\\n                                    </mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                        <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                            <mat-form-field >\\r\\n                                <mat-label>Số liệu</mat-label>\\r\\n                                <input matInput formControlName=\\\"data\\\">\\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addMore()\\\">Thêm nhiều</button>\\r\\n    <div mat-dialog-actions>\\r\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">Hủy</button>\\r\\n        <button mat-raised-button (click)=\\\"submit()\\\">Xác nhận</button>\\r\\n    </div>\\r\\n\"","export default \"<button id=\\\"addNew\\\" mat-raised-button (click)=\\\"openDialog()\\\">Thêm mới</button>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header card-header-primary\\\">\\r\\n        <h4 class=\\\"card-title\\\">Số liệu sản xuất theo tháng</h4>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <table mat-table [dataSource]=\\\"showMonthlyProduction\\\" class=\\\"mat-elevation-z8\\\" matSort>\\r\\n            <!-- Position Column -->\\r\\n            <ng-container matColumnDef=\\\"position\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as i\\\"> {{i + 1}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Code Column -->\\r\\n            <ng-container matColumnDef=\\\"month\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Tháng </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element;index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index==editIndex;else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentMonthlyProduction.month\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.month}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"years\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Năm </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentMonthlyProduction.year\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.year}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"district_id\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Huyện/Thị xã </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-select [(ngModel)]=\\\"element.d_id\\\">\\r\\n                                <mat-option *ngFor=\\\"let d of districtService.district$ | async\\\" [value]=\\\"d.id\\\">\\r\\n                                    {{d.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.district?.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"product_id\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Tên sản phẩm</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-select [(ngModel)]=\\\"element.p_id\\\">\\r\\n                                <mat-option *ngFor=\\\"let p of productService.products$ | async\\\" [value]=\\\"p.id\\\">\\r\\n                                    {{p.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element?.products?.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"type_data_id\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Kiểu dữ liệu </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-select [(ngModel)]=\\\"element.t_d_id\\\">\\r\\n                                <mat-option *ngFor=\\\"let t of typeDataService.typeData$ | async\\\" [value]=\\\"t.id\\\">\\r\\n                                    {{t.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.typeData?.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"data\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Số liệu </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentMonthlyProduction.data\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.data}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"delete\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Thao tác </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else acceptButton\\\">\\r\\n                        <button mat-raised-button (click)=\\\"updateData()\\\">Xác nhận</button>\\r\\n                        <button mat-raised-button (click)=\\\"cancelEdit()\\\">Hủy</button>\\r\\n                    </ng-container>\\r\\n                    <ng-template #acceptButton>\\r\\n                        <ng-container *ngIf=\\\"editIndex == null\\\">\\r\\n                            <button mat-raised-button (click)=\\\"toggleEdit(index, element)\\\">Sửa</button>\\r\\n                            <button mat-raised-button (click)=\\\"deleteData(element.id)\\\">Xóa</button>\\r\\n                        </ng-container>\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator [length]=\\\"monthlyProduction.length\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n            (page)=\\\"onChangePage($event)\\\">\\r\\n        </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","export default \"button {\\n  margin: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL0FkbWluL3NyYy9hcHAvbW9kdWxlcy9tb250aGx5LXByb2R1Y3Rpb24vZGlhbG9nLW1wL0M6XFxVc2Vyc1xcS0lOR1xcRGVza3RvcFxcRWNvbm9taWMtU3RhdGlzdGljXFxlLXN0YXRpc3RpY3NcXFVJL3Byb2plY3RzXFxBZG1pblxcc3JjXFxhcHBcXG1vZHVsZXNcXG1vbnRobHktcHJvZHVjdGlvblxcZGlhbG9nLW1wXFxkaWFsb2ctbXAuY29tcG9uZW50LnNjc3MiLCJwcm9qZWN0cy9BZG1pbi9zcmMvYXBwL21vZHVsZXMvbW9udGhseS1wcm9kdWN0aW9uL2RpYWxvZy1tcC9kaWFsb2ctbXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FDQ0oiLCJmaWxlIjoicHJvamVjdHMvQWRtaW4vc3JjL2FwcC9tb2R1bGVzL21vbnRobHktcHJvZHVjdGlvbi9kaWFsb2ctbXAvZGlhbG9nLW1wLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwLjVyZW07XHJcbn1cclxuIiwiYnV0dG9uIHtcbiAgbWFyZ2luOiAwLjVyZW07XG59Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { MonthlyProduction } from '../../../models/monthly-production';\r\nimport { MonthlyProductionService } from '../services/monthly-production.service';\r\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\r\nimport { TypeDataService } from '../../type-data/services/type-data.service';\r\nimport { ProductService } from '../../products/services/product.service';\r\nimport { QuanHuyenService } from '../../quan-huyen/services/quan-huyen.service';\r\n\r\n@Component({\r\n  selector: 'app-dialog-mp',\r\n  templateUrl: './dialog-mp.component.html',\r\n  styleUrls: ['./dialog-mp.component.scss']\r\n})\r\nexport class DialogMPComponent implements OnInit {\r\n  form: FormGroup\r\n  constructor(public dialogRef: MatDialogRef<DialogMPComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MonthlyProduction,\r\n    public mPSV: MonthlyProductionService, private formBuilder: FormBuilder,\r\n    public typeDataSV:TypeDataService,\r\n    public productService:ProductService,\r\n    public districtService:QuanHuyenService\r\n  ) { }\r\n  month:any=[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"];\r\n  year:any=null;\r\n  month_value:any=null;\r\n  district_value:any=null;\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      mProduction:this.formBuilder.array([])\r\n    })\r\n    this.addMore();\r\n  }\r\n  get mProductionControl(){\r\n    return this.form.controls.mProduction as FormArray;\r\n  }\r\n  addMore(){\r\n    this.mProductionControl.push(this.formBuilder.group({\r\n      month: ['',[Validators.required]],\r\n      year: ['',[Validators.required]],\r\n      data: ['',[Validators.required]],\r\n      p_id:['',[Validators.required]],\r\n      t_d_id:['',[Validators.required]],\r\n      d_id:['',[Validators.required]]\r\n    }))\r\n  }\r\n  onNoClick() {\r\n    this.dialogRef.close();\r\n  }\r\n  submit() {\r\n    const {mProduction} = this.form.value;\r\n    const newMProduction=mProduction.map(\r\n      e =>{\r\n        return{\r\n          ...e,\r\n          month:this.month_value,\r\n          year:this.year,\r\n          d_id:this.district_value\r\n        }\r\n      \r\n    })\r\n    this.mPSV.add(newMProduction);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9BZG1pbi9zcmMvYXBwL21vZHVsZXMvbW9udGhseS1wcm9kdWN0aW9uL21vbnRobHktcHJvZHVjdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MonthlyProduction } from '../../models/monthly-production';\r\nimport { MatDialog, PageEvent } from '@angular/material';\r\nimport { DialogMPComponent } from './dialog-mp/dialog-mp.component';\r\nimport { MonthlyProductionService } from './services/monthly-production.service';\r\nimport { ConfirmDialogService } from '../../@lib/services/confirm-dialog.service';\r\nimport { TypeDataService } from '../type-data/services/type-data.service';\r\nimport { ProductService } from '../products/services/product.service';\r\nimport { QuanHuyenService } from '../quan-huyen/services/quan-huyen.service';\r\n\r\n@Component({\r\n  selector: 'app-monthly-production',\r\n  templateUrl: './monthly-production.component.html',\r\n  styleUrls: ['./monthly-production.component.scss']\r\n})\r\n\r\nexport class MonthlyProductionComponent implements OnInit {\r\n  displayedColumns: string[] = [\"position\", \"month\", \"years\", \"district_id\", \"product_id\", \"type_data_id\", \"data\", \"delete\"]\r\n  monthlyProduction: MonthlyProduction[] = null;\r\n  showMonthlyProduction: MonthlyProduction[] = null;\r\n  currentMonthlyProduction: MonthlyProduction = null;\r\n  oldMonthlyProduction: MonthlyProduction = null;\r\n  editIndex = null;\r\n  pageSize = 5\r\n  pageSizeOptions = [2, 5, 10, 25]\r\n  pageEvent: PageEvent\r\n  length = 1000\r\n  constructor(private dialog: MatDialog,\r\n    public mPSV: MonthlyProductionService,\r\n    private confirmDialog: ConfirmDialogService,\r\n    public typeDataService: TypeDataService,\r\n    public productService: ProductService,\r\n    public districtService:QuanHuyenService) { }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogMPComponent, {\r\n      data: { monthlyProduction: this.monthlyProduction }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mPSV.monthlyProduction$.subscribe(l => {\r\n      this.monthlyProduction = l\r\n      const { pageSize, } = this\r\n      this.onChangePage({\r\n        length: this.monthlyProduction.length,\r\n        pageSize,\r\n        pageIndex: 0,\r\n        previousPageIndex: null\r\n      })\r\n    })\r\n  }\r\n  toggleEdit(index: number, monthlyProduction: MonthlyProduction) {\r\n    this.currentMonthlyProduction = monthlyProduction;\r\n    console.log(this.currentMonthlyProduction);\r\n    this.editIndex = index;\r\n    this.oldMonthlyProduction = { ...monthlyProduction };\r\n  }\r\n  cancelEdit() {\r\n    this.currentMonthlyProduction.month = this.oldMonthlyProduction.month;\r\n    this.currentMonthlyProduction.year = this.oldMonthlyProduction.year;\r\n    this.currentMonthlyProduction.t_d_id = this.oldMonthlyProduction.t_d_id;\r\n    this.currentMonthlyProduction.d_id = this.oldMonthlyProduction.d_id;\r\n    this.currentMonthlyProduction.data = this.oldMonthlyProduction.data;\r\n    this.currentMonthlyProduction.p_id = this.oldMonthlyProduction.p_id;\r\n    this.editIndex = this.currentMonthlyProduction = null;\r\n  }\r\n  updateData() {\r\n    console.log(this.currentMonthlyProduction)\r\n    this.mPSV.update(this.currentMonthlyProduction).subscribe(\r\n      _ => this.currentMonthlyProduction = this.editIndex = null\r\n    )\r\n  }\r\n  deleteData(id: number) {\r\n    this.confirmDialog.show().then(\r\n      res => {\r\n        if (res) {\r\n          this.mPSV.delete(id);\r\n        }\r\n      }\r\n    )\r\n  }\r\n  onChangePage({ length,\r\n    pageIndex,\r\n    pageSize,\r\n    previousPageIndex }) {\r\n    console.log(length,\r\n      pageIndex,\r\n      pageSize,\r\n      previousPageIndex)\r\n    this.showMonthlyProduction = Object.keys(this.monthlyProduction).map(mP => this.monthlyProduction[mP]).slice(pageIndex * pageSize, pageIndex * pageSize + pageSize)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MonthlyProductionComponent } from './monthly-production.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatTableModule, MatTabsModule, MatInputModule, MatFormFieldModule, MatDialogModule, MatButtonModule, MatSelectModule, MatSortModule, MatPaginatorModule } from '@angular/material';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { LibModule } from '../../@lib/lib.module';\r\nimport { MonthlyProductionService } from './services/monthly-production.service';\r\nimport { DialogMPComponent } from './dialog-mp/dialog-mp.component';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: MonthlyProductionComponent,\r\n    children: []\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [MonthlyProductionComponent, DialogMPComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES),\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatSortModule,\r\n    LibModule,\r\n    MatPaginatorModule\r\n  ],\r\n \r\n  entryComponents:[DialogMPComponent]\r\n})\r\nexport class MonthlyProductionModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MonthlyProduction } from '../../../models/monthly-production';\r\nimport { BehaviorSubject, forkJoin } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\nimport { TypeDataService } from '../../type-data/services/type-data.service';\r\nimport { ProductService } from '../../products/services/product.service';\r\nimport { ProductLineService } from '../../product-line/services/product-line.service';\r\nimport { QuanHuyenService } from '../../quan-huyen/services/quan-huyen.service';\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\nexport class MonthlyProductionService {\r\n  monthlyProductionsSubject = new BehaviorSubject<MonthlyProduction[]>([])\r\n\r\n  get monthlyProduction$() {\r\n    return this.monthlyProductionsSubject.asObservable()\r\n  }\r\n\r\n  constructor(private http: HttpClient,\r\n     private t_dSV: TypeDataService,\r\n     private productSV: ProductService,\r\n     private districtService:QuanHuyenService\r\n  ) {\r\n    this.getList()\r\n  }\r\n\r\n  getList() {\r\n    this.http.get(\"monthly-production\").subscribe(\r\n      (res: any) => this.monthlyProductionsSubject.next(res)\r\n    )\r\n  }\r\n  add(mProduction: MonthlyProduction[]) {\r\n    this.http.post(\"monthly-production\", mProduction).subscribe(\r\n      (res: any) => {\r\n        res.map(\r\n          e => {\r\n            const newList = [e, ...this.monthlyProductionsSubject.value]\r\n            this.monthlyProductionsSubject.next(newList)\r\n\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n  update(monthlyProduction: MonthlyProduction) {\r\n    return this.http.patch(\"monthly-production\", monthlyProduction).pipe(\r\n      tap(\r\n        res => {\r\n          const { value } = this.monthlyProductionsSubject\r\n          const index = value.findIndex(e => e.id == monthlyProduction.id)\r\n          const newList = { ...value }\r\n          newList[index] = monthlyProduction\r\n          this.t_dSV.typeData$.subscribe(\r\n            typeDataList => {\r\n              const tL = typeDataList.find(e => e.id == monthlyProduction.t_d_id)\r\n              monthlyProduction.typeData = tL\r\n            }\r\n          )\r\n          this.productSV.products$.subscribe(\r\n            productList => {\r\n              const pL = productList.find(e => e.id == monthlyProduction.p_id)\r\n              monthlyProduction.products = pL\r\n            }\r\n          )\r\n           this.districtService.district$.subscribe(\r\n            productList => {\r\n              const dL = productList.find(e => e.id == monthlyProduction.d_id)\r\n              monthlyProduction.district = dL\r\n            }\r\n          )\r\n          this.monthlyProductionsSubject.next(newList)\r\n        }\r\n      )\r\n    )\r\n  }\r\n  delete(id: number) {\r\n    this.http.delete(\"monthly-production/\" + id).subscribe(\r\n      res => {\r\n        const { value } = this.monthlyProductionsSubject\r\n        const newList = value.filter(e => e.id != id)\r\n        this.monthlyProductionsSubject.next(newList)\r\n      }\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}