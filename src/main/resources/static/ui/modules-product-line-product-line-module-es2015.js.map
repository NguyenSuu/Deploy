{"version":3,"sources":["./src/app/modules/product-line/dialog/dialog.component.html","./src/app/modules/product-line/product-line.component.html","./src/app/@lib/components/confirm/confirm.component.ts","./src/app/@lib/lib.module.ts","./src/app/@lib/services/confirm-dialog.service.ts","./src/app/modules/fields/services/fields.service.ts","./src/app/modules/product-line/dialog/dialog.component.scss","./src/app/modules/product-line/dialog/dialog.component.ts","./src/app/modules/product-line/product-line.component.scss","./src/app/modules/product-line/product-line.component.ts","./src/app/modules/product-line/product-line.module.ts","./src/app/modules/product-line/services/product-line.service.ts"],"names":[],"mappings":"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","file":"modules-product-line-product-line-module-es2015.js","sourcesContent":["export default \"<h1 mat-dialog-title>Thêm mói dòng sản phẩm</h1>\\r\\n<div mat-dialog-content>\\r\\n    <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n        <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\"></div>\\r\\n        <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label>Tên ngành</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"field_id\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let f of fieldService.field$ | async\\\" [value]=\\\"f.id\\\">\\r\\n                        {{ f.name}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-content>\\r\\n    <div [formGroup]=\\\"form\\\">\\r\\n        <div formArrayName=\\\"productLines\\\" *ngFor=\\\"let control of productLinesControl.controls;index as i\\\">\\r\\n            <form class=\\\"example-form\\\" [formGroupName]=\\\"i\\\">\\r\\n                <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n                    <div fxFlex=\\\"50\\\" fxFlex.xs=\\\"50\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Tên dòng sản phẩm</mat-label>\\r\\n                            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Thực phẩm\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                    <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Mã dòng sản phẩm</mat-label>\\r\\n                            <input matInput formControlName=\\\"code\\\" placeholder=\\\"01\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addMore()\\\">Thêm nhiều</button>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Hủy</button>\\r\\n    <button mat-raised-button (click)=\\\"submit()\\\">Xác nhận</button>\\r\\n</div>\"","export default \"<button id=\\\"addNew\\\" mat-raised-button (click)=\\\"openDialog()\\\">Thêm mới</button>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header card-header-primary\\\">\\r\\n        <h4 class=\\\"card-title\\\">Dòng sản phẩm</h4>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <table mat-table [dataSource]=\\\"showProductLines\\\" class=\\\"mat-elevation-z8\\\" matSort>\\r\\n            <!-- Position Column -->\\r\\n            <ng-container matColumnDef=\\\"position\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as i\\\"> {{i + 1}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Code Column -->\\r\\n            <ng-container matColumnDef=\\\"code\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Mã dòng sản phẩm </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element;index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index==editIndex;else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentProductLine.code\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.code}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Tên dòng sản phẩm </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentProductLine.name\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"fields\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Tên ngành</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-select [(ngModel)]=\\\"element.f_id\\\">\\r\\n                                <mat-option *ngFor=\\\"let f of pLSv.fields$ | async\\\" [value]=\\\"f.id\\\">\\r\\n                                    {{ f.name }}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element?.field?.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <!-- End Fields Column -->\\r\\n\\r\\n            <ng-container matColumnDef=\\\"delete\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Thao tác </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else acceptButton\\\">\\r\\n                        <button mat-raised-button (click)=\\\"updateProduct()\\\">Xác nhận</button>\\r\\n                        <button mat-raised-button (click)=\\\"cancelEdit()\\\">Hủy</button>\\r\\n                    </ng-container>\\r\\n                    <ng-template #acceptButton>\\r\\n                        <ng-container *ngIf=\\\"editIndex == null\\\">\\r\\n                            <button mat-raised-button (click)=\\\"toggleEdit(index, element)\\\">Sửa</button>\\r\\n                            <button mat-raised-button (click)=\\\"deleteProductLine(element.id)\\\">Xóa</button>\\r\\n                        </ng-container>\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator [length]=\\\"productLines.length\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n        (page)=\\\"onChangePage($event)\\\">\\r\\n    </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  template: `\r\n    <p>\r\n      {{ data.message }}\r\n    </p>\r\n\r\n    <div>\r\n      <button mat-button (click)=\"confirm()\">Có</button>\r\n\r\n      <button mat-button (click)=\"onNoClick()\" >Hủy</button>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ConfirmComponent {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private dialogRef: MatDialogRef<ConfirmComponent>) { }\r\n\r\n  confirm() {\r\n    this.dialogRef.close(true)\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfirmComponent } from './components/confirm/confirm.component';\r\nimport { ConfirmDialogService } from './services/confirm-dialog.service';\r\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConfirmComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [\r\n    ConfirmDialogService\r\n  ],\r\n  entryComponents: [\r\n    ConfirmComponent\r\n  ]\r\n})\r\nexport class LibModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfirmComponent } from '../components/confirm/confirm.component';\r\n\r\n@Injectable()\r\nexport class ConfirmDialogService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  async show(message = \"Xác nhận\"): Promise<boolean> {\r\n    let dialogRef = this.dialog.open(ConfirmComponent, {\r\n      data: { message },\r\n    })\r\n\r\n    const result: boolean  = await dialogRef.afterClosed().toPromise();\r\n\r\n    return new Promise(\r\n      (res, rej) => {\r\n        if (result) {\r\n          res(true)\r\n          \r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Fields } from '../../../models/field';\r\n\r\n@Injectable({\r\n  providedIn:\"root\"\r\n})\r\n\r\nexport class FieldsService {\r\n  fieldsSubject = new BehaviorSubject<Fields[]>([]);\r\n\r\n  get field$() {\r\n    return this.fieldsSubject.asObservable();\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    this.getList();\r\n  }\r\n  \r\n  getList() {\r\n    this.httpClient.get(\"fields\").subscribe(\r\n      (res: any) => this.fieldsSubject.next(res)\r\n    )\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.httpClient.delete('fields/' + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.fieldsSubject\r\n        const newList = value.filter(e => e.id != id)\r\n        this.fieldsSubject.next(newList)\r\n      }\r\n    )\r\n  }\r\n\r\n  update(field: Fields) {\r\n    return this.httpClient.patch(\"fields\", field).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.fieldsSubject\r\n\r\n          const index = value.findIndex(e => e.id == field.id)\r\n\r\n          const newList = [...value]\r\n\r\n          newList[index] = field;\r\n\r\n          this.fieldsSubject.next(newList)\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  addField(field: Fields[]) {\r\n    this.httpClient.post(\"fields\", field).subscribe(\r\n      (res: any) => {\r\n        const newList = [...res, ...this.fieldsSubject.value];\r\n        {\r\n          this.fieldsSubject.next(newList);\r\n        }\r\n      }\r\n    )\r\n  };\r\n}\r\n","export default \"button {\\n  margin: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL0FkbWluL3NyYy9hcHAvbW9kdWxlcy9wcm9kdWN0LWxpbmUvZGlhbG9nL0M6XFxVc2Vyc1xcS0lOR1xcRGVza3RvcFxcRWNvbm9taWMtU3RhdGlzdGljXFxlLXN0YXRpc3RpY3NcXFVJL3Byb2plY3RzXFxBZG1pblxcc3JjXFxhcHBcXG1vZHVsZXNcXHByb2R1Y3QtbGluZVxcZGlhbG9nXFxkaWFsb2cuY29tcG9uZW50LnNjc3MiLCJwcm9qZWN0cy9BZG1pbi9zcmMvYXBwL21vZHVsZXMvcHJvZHVjdC1saW5lL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FDQ0oiLCJmaWxlIjoicHJvamVjdHMvQWRtaW4vc3JjL2FwcC9tb2R1bGVzL3Byb2R1Y3QtbGluZS9kaWFsb2cvZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwLjVyZW07XHJcbn0iLCJidXR0b24ge1xuICBtYXJnaW46IDAuNXJlbTtcbn0iXX0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ProductLine } from '../../../models/product-line';\r\nimport { ProductLineService } from '../services/product-line.service';\r\nimport { FieldsService } from '../../fields/services/fields.service';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  constructor(public dialogRef: MatDialogRef<DialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: ProductLine,\r\n    public pLSv: ProductLineService,\r\n    private formBuilder: FormBuilder,\r\n    public fieldService: FieldsService\r\n  ) { }\r\n  field_id: any = null;\r\n  onNoClick(): void {\r\n    this.dialogRef.close({\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      productLines: this.formBuilder.array([])\r\n\r\n    })\r\n    this.addMore();\r\n  }\r\n  get productLinesControl() {\r\n    return this.form.controls.productLines as FormArray;\r\n  }\r\n  addMore() {\r\n    this.productLinesControl.push(this.formBuilder.group({\r\n      name: [''],\r\n      code: ['', Validators.required],\r\n      f_id: ['']\r\n    }))\r\n  }\r\n  submit() {\r\n    const {productLines} = this.form.value;\r\n    const newProductLines = productLines.map(\r\n      e => {\r\n        return {\r\n          ...e,\r\n          f_id: this.field_id\r\n        }\r\n      }\r\n    )\r\n    \r\n    this.pLSv.add(newProductLines);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9BZG1pbi9zcmMvYXBwL21vZHVsZXMvcHJvZHVjdC1saW5lL3Byb2R1Y3QtbGluZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductLine } from '../../models/product-line';\r\nimport { ProductLineService } from './services/product-line.service';\r\nimport { MatDialog, PageEvent } from '@angular/material';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { ConfirmDialogService } from '../../@lib/services/confirm-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-product-line',\r\n  templateUrl: './product-line.component.html',\r\n  styleUrls: ['./product-line.component.scss']\r\n})\r\nexport class ProductLineComponent implements OnInit {\r\n  displayedColumns: string[] = ['position', 'code', 'name', 'fields', 'delete']\r\n\r\n  productLines: ProductLine[] = null;\r\n  showProductLines: ProductLine[] = null;\r\n  pageSize = 5\r\n  pageSizeOptions = [2, 5, 10, 25]\r\n  pageEvent: PageEvent\r\n  length = 1000\r\n  editIndex = null;\r\n  currentProductLine: ProductLine = null;\r\n  oldProductLine: ProductLine = null;\r\n\r\n  constructor(public pLSv: ProductLineService, public dialog: MatDialog, private confirmDialog: ConfirmDialogService) { }\r\n\r\n  updateProduct() {\r\n    this.pLSv.update(this.currentProductLine).subscribe(\r\n      _ => this.currentProductLine = this.editIndex = null\r\n    )\r\n  }\r\n\r\n  deleteProductLine(id: number) {\r\n    this.confirmDialog.show().then(\r\n      res => {\r\n        if (res) {\r\n          this.pLSv.delete(id);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      data: { product: this.productLines }\r\n    });\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.currentProductLine.code = this.oldProductLine.code;\r\n    this.currentProductLine.name = this.oldProductLine.name;\r\n    this.editIndex = this.currentProductLine = null;\r\n  }\r\n\r\n  toggleEdit(index: number, productLine: ProductLine) {\r\n    this.editIndex = index;\r\n    this.currentProductLine = productLine;\r\n    this.oldProductLine = { ...productLine };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pLSv.getList()\r\n    this.pLSv.productLine$.subscribe(l => {\r\n      this.productLines = l\r\n      const { pageSize, } = this\r\n      this.onChangePage({\r\n        length: this.productLines.length,\r\n        pageSize,\r\n        pageIndex: 0,\r\n        previousPageIndex: null\r\n      })\r\n    })\r\n  }\r\n  onChangePage({ length,\r\n    pageIndex,\r\n    pageSize,\r\n    previousPageIndex }) {\r\n    console.log(length,\r\n      pageIndex,\r\n      pageSize,\r\n      previousPageIndex)\r\n    this.showProductLines = [...this.productLines].slice(pageIndex * pageSize, pageIndex * pageSize + pageSize)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductLineComponent } from './product-line.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {  MatTableModule, MatInputModule, MatTabsModule, MatFormFieldModule, MatDialogModule, MatButtonModule, MatSelectModule, MatSortModule, MatPaginatorModule } from '@angular/material';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ProductLineService } from './services/product-line.service';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { LibModule } from '../../@lib/lib.module';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductLineComponent,\r\n    children: []\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [ProductLineComponent, DialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES),\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatSortModule,\r\n    LibModule,\r\n    MatPaginatorModule\r\n  ],\r\n  entryComponents:[DialogComponent]\r\n})\r\nexport class ProductLineModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, forkJoin } from 'rxjs';\r\nimport { ProductLine } from '../../../models/product-line';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Fields } from '../../../models/field';\r\nimport { tap, map, distinct } from 'rxjs/operators';\r\nimport { ConfirmDialogService } from '../../../@lib/services/confirm-dialog.service';\r\nimport { FieldsService } from '../../fields/services/fields.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductLineService {\r\n  private productLineSubject = new BehaviorSubject<ProductLine[]>([]);\r\n\r\n  constructor(private httpClient: HttpClient,private fieldSV:FieldsService) {\r\n    this.getList();\r\n  }\r\n  \r\n  get productLine$() {\r\n    return this.productLineSubject.asObservable();\r\n  }\r\n\r\n  add(products: ProductLine[]) {\r\n    this.httpClient.post(\"product-line\", products).subscribe(\r\n      (res: any) => {\r\n        res.map(e=>{\r\n          const newList = [e, ...this.productLineSubject.value];\r\n          this.productLineSubject.next(newList);\r\n        }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.httpClient.delete(\"product-line/\" + id).subscribe(\r\n      (res: any) => {\r\n        const { value } = this.productLineSubject\r\n        const newList = value.filter(e => e.id != id)\r\n        this.productLineSubject.next(newList)\r\n      }\r\n    )\r\n  }\r\n\r\n  update(productL: ProductLine) {\r\n    return this.httpClient.patch(\"product-line\", productL).pipe(\r\n      tap(\r\n        (res: any) => {\r\n          const { value } = this.productLineSubject;\r\n\r\n          const index = value.findIndex(e => e.id == productL.id);\r\n\r\n          let newList: any = [...value];\r\n          \r\n          newList[index] = productL;\r\n\r\n          this.fieldSV.field$.subscribe(\r\n            fieldList =>{\r\n              const fL = fieldList.find(e => e.id == productL.f_id)\r\n              productL.field = fL;            }\r\n          );\r\n          this.productLineSubject.next(newList);\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  getList() {\r\n    this.httpClient.get(\"product-line\").subscribe(\r\n      (res:any)=>this.productLineSubject.next(res))\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}