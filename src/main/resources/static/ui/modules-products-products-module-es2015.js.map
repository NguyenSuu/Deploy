{"version":3,"sources":["./src/app/modules/products/dialog/dialog.component.html","./src/app/modules/products/products.component.html","./src/app/modules/products/dialog/dialog.component.scss","./src/app/modules/products/dialog/dialog.component.ts","./src/app/modules/products/products.component.scss","./src/app/modules/products/products.component.ts","./src/app/modules/products/products.module.ts"],"names":[],"mappings":"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","file":"modules-products-products-module-es2015.js","sourcesContent":["export default \"<h1 mat-dialog-title>Thêm mới sản phẩm</h1>\\r\\n<div mat-dialog-content>\\r\\n    <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n        <div fxFlex=\\\"10\\\" fxFlex.xs=\\\"10\\\"></div>\\r\\n        <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label>Tên ngành</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"fieldSelectedId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let f of fieldService.field$ | async\\\" [value]=\\\"f.id\\\">\\r\\n                        {{f.name}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\" fxFlex.xs=\\\"10\\\"></div>\\r\\n        <div fxFlex=\\\"40\\\" fxFlex.xs=\\\"40\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-label>Tên dòng sản phẩm</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"plId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <mat-option *ngFor=\\\"let pL of nganhHienThi$ | async\\\" [value]=\\\"pL.id\\\">\\r\\n                        {{pL.name}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-content>\\r\\n    <div [formGroup]=\\\"form\\\">\\r\\n        <div formArrayName=\\\"products\\\" *ngFor=\\\"let control of productsControl.controls; index as i\\\">\\r\\n            <form class=\\\"example-form\\\" [formGroupName]=\\\"i\\\">\\r\\n                <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlexFill>\\r\\n                    <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Tên sản phẩm</mat-label>\\r\\n                            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Coffee\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                    <div fxFlex=\\\"30\\\" fxFlex.xs=\\\"30\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Mã sản phẩm</mat-label>\\r\\n                            <input matInput formControlName=\\\"code\\\" placeholder=\\\"02\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"5\\\" fxFlex.xs=\\\"5\\\"></div>\\r\\n                    <div fxFlex=\\\"20\\\" fxFlex.xs=\\\"20\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Đơn vị tính</mat-label>\\r\\n                            <mat-select formControlName=\\\"u_id\\\">\\r\\n                                <mat-option *ngFor=\\\"let u of unitService.unit$ | async\\\" [value]=\\\"u.id\\\">\\r\\n                                    {{u.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"addMore()\\\">Thêm nhiều</button>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Hủy</button>\\r\\n    <button mat-raised-button (click)=\\\"submit()\\\">Xác nhận</button>\\r\\n</div>\"","export default \"<button id=\\\"addNew\\\" mat-raised-button (click)=\\\"openDialog()\\\">Thêm mới</button>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header card-header-primary\\\">\\r\\n        <h4 class=\\\"card-title\\\">Sản phẩm</h4>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <table mat-table [dataSource]=\\\"showProducts\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <!-- Position Column -->\\r\\n            <ng-container matColumnDef=\\\"position\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as i\\\"> {{i + 1}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Code Column -->\\r\\n            <ng-container matColumnDef=\\\"code\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Mã sản phẩm </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element;index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index==editIndex;else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentProduct.code\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.code}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Name Column -->\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Tên sản phẩm </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"currentProduct.name\\\" />\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"units_id\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Đơn vị tính </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-select [(ngModel)]=\\\"element.u_id\\\">\\r\\n                                <mat-option *ngFor=\\\"let u of unitService.unit$ | async\\\" [value]=\\\"u.id\\\">\\r\\n                                    {{u.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element?.units?.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"product_line_id\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Mã dòng sản phẩm </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else editInput\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-select [(ngModel)]=\\\"element.pL_id\\\">\\r\\n                                <mat-option *ngFor=\\\"let pL of productLineService.productLine$ | async\\\" [value]=\\\"pL.id\\\">\\r\\n                                    {{pL.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </ng-container>\\r\\n                    <ng-template #editInput>\\r\\n                        {{element?.productLine?.name}}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"delete\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Thao tác </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element; index as index\\\">\\r\\n                    <ng-container *ngIf=\\\"index == editIndex; else acceptButton\\\">\\r\\n                        <button mat-raised-button (click)=\\\"updateProduct()\\\">Xác nhận</button>\\r\\n                        <button mat-raised-button (click)=\\\"cancelEdit()\\\">Hủy</button>\\r\\n                    </ng-container>\\r\\n                    <ng-template #acceptButton>\\r\\n                        <ng-container *ngIf=\\\"editIndex == null\\\">\\r\\n                            <button mat-raised-button (click)=\\\"toggleEdit(index, element)\\\">Sửa</button>\\r\\n                            <button mat-raised-button (click)=\\\"deleteProduct(element.id)\\\">Xóa</button>\\r\\n                        </ng-container>\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <mat-paginator [length]=\\\"products.length\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n        (page)=\\\"onChangePage($event)\\\">\\r\\n    </mat-paginator>\\r\\n    </div>\\r\\n</div>\"","export default \"button {\\n  margin: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL0FkbWluL3NyYy9hcHAvbW9kdWxlcy9wcm9kdWN0cy9kaWFsb2cvQzpcXFVzZXJzXFxLSU5HXFxEZXNrdG9wXFxFY29ub21pYy1TdGF0aXN0aWNcXGUtc3RhdGlzdGljc1xcVUkvcHJvamVjdHNcXEFkbWluXFxzcmNcXGFwcFxcbW9kdWxlc1xccHJvZHVjdHNcXGRpYWxvZ1xcZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwicHJvamVjdHMvQWRtaW4vc3JjL2FwcC9tb2R1bGVzL3Byb2R1Y3RzL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FDQ0oiLCJmaWxlIjoicHJvamVjdHMvQWRtaW4vc3JjL2FwcC9tb2R1bGVzL3Byb2R1Y3RzL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XHJcbiAgICBtYXJnaW46IDAuNXJlbTtcclxufSIsImJ1dHRvbiB7XG4gIG1hcmdpbjogMC41cmVtO1xufSJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ProductService } from '../services/product.service';\r\nimport { Products } from '../../../models/product';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ProductLineService } from '../../product-line/services/product-line.service';\r\nimport { FieldsService } from '../../fields/services/fields.service';\r\nimport { UnitsService } from '../../units/services/units.service';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  form: FormGroup;\r\n  plId: any = null;\r\n  fieldSelectedId = null;\r\n  constructor(public dialogRef: MatDialogRef<DialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Products,\r\n    public productSv: ProductService,\r\n    private formBuilder: FormBuilder,\r\n    public productLineService: ProductLineService,\r\n    public fieldService: FieldsService,\r\n    public unitService: UnitsService\r\n  ) { }\r\n  onNoClick(): void {\r\n    this.dialogRef.close({\r\n    });\r\n  }\r\n\r\n  get nganhHienThi$() {\r\n    return this.productLineService.productLine$.pipe(\r\n      map(listNganh => {\r\n        return listNganh.filter(e => e.f_id == this.fieldSelectedId)\r\n      })\r\n    )\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      products: this.formBuilder.array([])\r\n    })\r\n    this.addMore();\r\n    this.productLineService.getList()\r\n  }\r\n  get productsControl() {\r\n    return this.form.controls.products as FormArray;\r\n  }\r\n  addMore() {\r\n    this.productsControl.push(this.formBuilder.group({\r\n      name: [''],\r\n      code: ['', Validators.required],\r\n      u_id: [''],\r\n      pL_id: [''],\r\n    }))\r\n  }\r\n\r\n  submit() {\r\n    const { products } = this.form.value;\r\n\r\n    const newProducts = products.map(\r\n      e => {\r\n        return {\r\n          ...e,\r\n          pL_id: this.plId\r\n        }\r\n      }\r\n    )\r\n    this.productSv.add(newProducts);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy9BZG1pbi9zcmMvYXBwL21vZHVsZXMvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from './services/product.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Products } from '../../models/product';\r\nimport { MatDialog, PageEvent } from '@angular/material';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { ConfirmDialogService } from '../../@lib/services/confirm-dialog.service';\r\nimport { UnitsService } from '../units/services/units.service';\r\nimport { FieldsService } from '../fields/services/fields.service';\r\nimport { ProductLineService } from '../product-line/services/product-line.service';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  displayedColumns: string[] = ['position', 'code', 'name', 'units_id', 'product_line_id', 'delete'];\r\n  products: Products[] = null;\r\n  showProducts: Products[] = null;\r\n  editIndex = null;\r\n  currentProduct: Products = null;\r\n  oldProduct: Products = null;\r\n  pageSize = 5\r\n  pageSizeOptions = [2, 5, 10, 25]\r\n  pageEvent: PageEvent\r\n  length = 1000\r\n  constructor(public productService: ProductService,\r\n    private fieldService: FieldsService,\r\n    public dialog: MatDialog,\r\n    private confirmDialog: ConfirmDialogService,\r\n    public productLineService:ProductLineService,\r\n    public unitService:UnitsService\r\n  ) { }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      data: { products: this.products }\r\n    });\r\n  }\r\n  cancelEdit() {\r\n    this.currentProduct.code = this.oldProduct.code;\r\n    this.currentProduct.name = this.oldProduct.name;\r\n    this.currentProduct.pL_id = this.oldProduct.pL_id;\r\n    this.currentProduct.u_id = this.oldProduct.u_id;\r\n    this.editIndex = this.currentProduct = null;\r\n  }\r\n  updateProduct() {\r\n    this.productService.update(this.currentProduct).subscribe(\r\n      _ => this.currentProduct = this.editIndex = null\r\n    );\r\n  }\r\n  async deleteProduct(id: number) {\r\n    this.confirmDialog.show('Bạn chắc chắn muốn xóa?').then(res => {\r\n      if (res) {\r\n        this.productService.delete(id);\r\n      }\r\n    });\r\n  }\r\n  toggleEdit(index: number, product: Products) {\r\n    this.editIndex = index;\r\n    this.currentProduct = product;\r\n    this.oldProduct = { ...product };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.productService.getList()\r\n    this.productService.product$.subscribe(l => {\r\n      this.products = l\r\n      const { pageSize, } = this\r\n      this.onChangePage({\r\n        length: this.products.length,\r\n        pageSize,\r\n        pageIndex: 0,\r\n        previousPageIndex: null\r\n      })\r\n    })\r\n\r\n  }\r\n  onChangePage({ length,\r\n    pageIndex,\r\n    pageSize,\r\n    previousPageIndex }) {\r\n    console.log(length,\r\n      pageIndex,\r\n      pageSize,\r\n      previousPageIndex)\r\n    this.showProducts = [...this.products].slice(pageIndex * pageSize, pageIndex * pageSize + pageSize)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductsComponent } from './products.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatSelectModule, MatInputModule, MatTableModule, MatFormFieldModule, MatTabsModule, MatDialogModule, MatButtonModule, MatPaginatorModule } from '@angular/material';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ProductService } from './services/product.service';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { LibModule } from '../../@lib/lib.module';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductsComponent,\r\n    children: []\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [ProductsComponent, DialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES),\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    LibModule,\r\n    MatPaginatorModule\r\n  ],\r\n  providers:[ProductService],\r\n  entryComponents:[DialogComponent]\r\n\r\n})\r\nexport class ProductsModule { }\r\n"],"sourceRoot":"webpack:///"}